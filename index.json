[
{
	"uri": "https://go-acme.github.io/lego/installation/",
	"title": "Installation",
	"tags": [],
	"description": "",
	"content": " Binaries To get the binary just download the latest release for your OS/Arch from the release page and put the binary somewhere convenient. lego does not assume anything about the location you run it from.\nFrom Docker docker run goacme/lego -h From package managers  ArchLinux (AUR):  yay -S lego Note: only the package manager for Arch Linux is officially supported by the lego team.\n FreeBSD (Ports):  cd /usr/ports/security/lego \u0026amp;\u0026amp; make install clean or\npkg install lego From sources Requirements:\n go v1.15+ environment variable: GO111MODULE=on  To install the latest development version from sources, just run:\ngo get -u github.com/go-acme/lego/v4/cmd/lego or\ngit clone git@github.com:go-acme/lego.git make # tests + doc + build make build # only build"
},
{
	"uri": "https://go-acme.github.io/lego/usage/",
	"title": "Usage",
	"tags": [],
	"description": "",
	"content": "  CLI  Lego can be use as a CLI.\n Library  Lego can be use as a Go Library.\n "
},
{
	"uri": "https://go-acme.github.io/lego/dns/",
	"title": "DNS Providers",
	"tags": [],
	"description": "",
	"content": " Configuration and Credentials Credentials and DNS configuration for DNS providers must be passed through environment variables.\nEnvironment Variables: Value The environment variables can reference a value.\nHere is an example bash command using the Cloudflare DNS provider:\n$ CLOUDFLARE_EMAIL=foo@bar.com \\ CLOUDFLARE_API_KEY=b9841238feb177a84330febba8a83208921177bffe733 \\ lego --dns cloudflare --domains www.example.com --email me@bar.com run Environment Variables: File The environment variables can reference a path to file.\nIn this case the name of environment variable must be suffixed by _FILE.\nThe file must contain only the value.\n Here is an example bash command using the CloudFlare DNS provider:\n$ cat /the/path/to/my/key b9841238feb177a84330febba8a83208921177bffe733 $ cat /the/path/to/my/email foo@bar.com $ CLOUDFLARE_EMAIL_FILE=/the/path/to/my/email \\ CLOUDFLARE_API_KEY_FILE=/the/path/to/my/key \\ lego --dns cloudflare --domains www.example.com --email me@bar.com run Experimental Features To resolve CNAME when creating dns-01 challenge: set LEGO_EXPERIMENTAL_CNAME_SUPPORT to true.\nDNS Providers  Akamai EdgeDNS  Since: v3.9.0\nAkamai edgedns supersedes FastDNS; implementing a DNS provider for solving the DNS-01 challenge using Akamai EdgeDNS\n Alibaba Cloud DNS  Since: v1.1.0\nConfiguration for Alibaba Cloud DNS.\n Amazon Lightsail  Since: v0.5.0\nConfiguration for Amazon Lightsail.\n Amazon Route 53  Since: v0.3.0\nConfiguration for Amazon Route 53.\n ArvanCloud  Since: v3.8.0\nConfiguration for ArvanCloud.\n Aurora DNS  Since: v0.4.0\nConfiguration for Aurora DNS.\n Autodns  Since: v3.2.0\nConfiguration for Autodns.\n Azure  Since: v0.4.0\nConfiguration for Azure.\n Bindman  Since: v2.6.0\nConfiguration for Bindman.\n Bluecat  Since: v0.5.0\nConfiguration for Bluecat.\n Checkdomain  Since: v3.3.0\nConfiguration for Checkdomain.\n ClouDNS  Since: v2.3.0\nConfiguration for ClouDNS.\n CloudDNS  Since: v3.6.0\nConfiguration for CloudDNS.\n CloudXNS  Since: v0.5.0\nConfiguration for CloudXNS.\n Cloudflare  Since: v0.3.0\nConfiguration for Cloudflare.\n ConoHa  Since: v1.2.0\nConfiguration for ConoHa.\n Constellix  Since: v3.4.0\nConfiguration for Constellix.\n DNS Made Easy  Since: v0.4.0\nConfiguration for DNS Made Easy.\n DNSPod  Since: v0.4.0\nConfiguration for DNSPod.\n DNSimple  Since: v0.3.0\nConfiguration for DNSimple.\n Designate DNSaaS for Openstack  Since: v2.2.0\nConfiguration for Designate DNSaaS for Openstack.\n Digital Ocean  Since: v0.3.0\nConfiguration for Digital Ocean.\n Domain Offensive (do.de)  Since: v2.4.0\nConfiguration for Domain Offensive (do.de).\n Domeneshop  Since: v4.3.0\nConfiguration for Domeneshop.\n DreamHost  Since: v1.1.0\nConfiguration for DreamHost.\n Duck DNS  Since: v0.5.0\nConfiguration for Duck DNS.\n Dyn  Since: v0.3.0\nConfiguration for Dyn.\n Dynu  Since: v3.5.0\nConfiguration for Dynu.\n EasyDNS  Since: v2.6.0\nConfiguration for EasyDNS.\n Exoscale  Since: v0.4.0\nConfiguration for Exoscale.\n External program  Since: v0.5.0 Solving the DNS-01 challenge using an external program.\n Gandi  Since: v0.3.0\nConfiguration for Gandi.\n Gandi Live DNS (v5)  Since: v0.5.0\nConfiguration for Gandi Live DNS (v5).\n Glesys  Since: v0.5.0\nConfiguration for Glesys.\n Go Daddy  Since: v0.5.0\nConfiguration for Go Daddy.\n Google Cloud  Since: v0.3.0\nConfiguration for Google Cloud.\n HTTP request  Since: v2.0.0\nConfiguration for HTTP request.\n Hetzner  Since: v3.7.0\nConfiguration for Hetzner.\n Hosting.de  Since: v1.1.0\nConfiguration for Hosting.de.\n Hurricane Electric DNS  Since: v4.3.0\nConfiguration for Hurricane Electric DNS.\n HyperOne  Since: v3.9.0\nConfiguration for HyperOne.\n INWX  Since: v2.0.0\nConfiguration for INWX.\n Infomaniak  Since: v4.1.0\nConfiguration for Infomaniak.\n Internet Initiative Japan  Since: v1.1.0\nConfiguration for Internet Initiative Japan.\n Ionos  Since: v4.2.0\nConfiguration for Ionos.\n Joker  Since: v2.6.0\nConfiguration for Joker.\n Joohoi\u0026#39;s ACME-DNS  Since: v1.1.0\nConfiguration for Joohoi\u0026rsquo;s ACME-DNS.\n Linode (v4)  Since: v1.1.0\nConfiguration for Linode (v4).\n Liquid Web  Since: v3.1.0\nConfiguration for Liquid Web.\n Loopia  Since: v4.2.0\nConfiguration for Loopia.\n LuaDNS  Since: v3.7.0\nConfiguration for LuaDNS.\n Manual  Solving the DNS-01 challenge using CLI prompt.\n MyDNS.jp  Since: v1.2.0\nConfiguration for MyDNS.jp.\n MythicBeasts  Since: v0.3.7\nConfiguration for MythicBeasts.\n NIFCloud  Since: v1.1.0\nConfiguration for NIFCloud.\n NS1  Since: v0.4.0\nConfiguration for NS1.\n Name.com  Since: v0.5.0\nConfiguration for Name.com.\n Namecheap  Since: v0.3.0\nConfiguration for Namecheap.\nTo enable API access on the Namecheap production environment, some opaque requirements must be met. More information in the section Enabling API Access of the Namecheap documentation. (2020-08: Account balance of $50+, 20+ domains in your account, or purchases totaling $50+ within the last 2 years.)\n Namesilo  Since: v2.7.0\nConfiguration for Namesilo.\n Netcup  Since: v1.1.0\nConfiguration for Netcup.\n Netlify  Since: v3.7.0\nConfiguration for Netlify.\n OVH  Since: v0.4.0\nConfiguration for OVH.\n Open Telekom Cloud  Since: v0.4.1\nConfiguration for Open Telekom Cloud.\n Oracle Cloud  Since: v2.3.0\nConfiguration for Oracle Cloud.\n PowerDNS  Since: v0.4.0\nConfiguration for PowerDNS.\n RFC2136  Since: v0.3.0\nConfiguration for RFC2136.\n Rackspace  Since: v0.4.0\nConfiguration for Rackspace.\n RimuHosting  Since: v0.3.5\nConfiguration for RimuHosting.\n Sakura Cloud  Since: v1.1.0\nConfiguration for Sakura Cloud.\n Scaleway  Since: v3.4.0\nConfiguration for Scaleway.\n Selectel  Since: v1.2.0\nConfiguration for Selectel.\n Servercow  Since: v3.4.0\nConfiguration for Servercow.\n Stackpath  Since: v1.1.0\nConfiguration for Stackpath.\n TransIP  Since: v2.0.0\nConfiguration for TransIP.\n VegaDNS  Since: v1.1.0\nConfiguration for VegaDNS.\n Versio.[nl|eu|uk]  Since: v2.7.0\nConfiguration for Versio.[nl|eu|uk].\n Vscale  Since: v2.0.0\nConfiguration for Vscale.\n Vultr  Since: v0.3.1\nConfiguration for Vultr.\n Yandex  Since: v3.7.0\nConfiguration for Yandex.\n Zone.ee  Since: v2.1.0\nConfiguration for Zone.ee.\n Zonomi  Since: v3.5.0\nConfiguration for Zonomi.\n deSEC.io  Since: v3.7.0\nConfiguration for deSEC.io.\n reg.ru  Since: v3.5.0\nConfiguration for reg.ru.\n "
},
{
	"uri": "https://go-acme.github.io/lego/usage/cli/examples/",
	"title": "Examples",
	"tags": [],
	"description": "",
	"content": " CLI Examples Assumes the lego binary has permission to bind to ports 80 and 443. You can get a pre-built binary from the releases page. If your environment does not allow you to bind to these ports, please read Port Usage.\nObtain a certificate lego --email=\u0026#34;foo@bar.com\u0026#34; --domains=\u0026#34;example.com\u0026#34; --http run You will find your certificate in the .lego folder of the current working directory:\n$ ls -1 ./.lego/certificates example.com.crt example.com.issuer.crt example.com.json example.com.key [maybe more files for different domains...] where\n example.com.crt is the server certificate (including the CA certificate), example.com.key is the private key needed for the server certificate, example.com.issuer.crt is the CA certificate, and example.com.json contains some JSON encoded meta information.  For each domain, you will have a set of these four files. Please note, that for wildcard certificates (*.example.com), the filenames will look like _.example.com.crt. The .crt and .key files are PEM encoded x509 certificates and private keys. If you\u0026rsquo;re looking for a cert.pem and privkey.pem, you can just use example.com.crt and example.com.key.\nObtain a certificate (and hook) The hook is executed only when the certificates are effectively created.\nlego --email=\u0026#34;foo@bar.com\u0026#34; --domains=\u0026#34;example.com\u0026#34; --http run --run-hook=\u0026#34;./myscript.sh\u0026#34; Some information are added to the environment variables when the hook is used:\n LEGO_ACCOUNT_EMAIL: the email of the account. LEGO_CERT_DOMAIN: the main domain of the certificate. LEGO_CERT_PATH: the path of the certificate. LEGO_CERT_KEY_PATH: the path of the certificate key.  To renew the certificate lego --email=\u0026#34;foo@bar.com\u0026#34; --domains=\u0026#34;example.com\u0026#34; --http renew To renew the certificate only if it expires within 45 days lego --email=\u0026#34;foo@bar.com\u0026#34; --domains=\u0026#34;example.com\u0026#34; --http renew --days 45 To renew the certificate (and hook) The hook is executed only when the certificates are effectively renewed.\nlego --email=\u0026#34;foo@bar.com\u0026#34; --domains=\u0026#34;example.com\u0026#34; --http renew --renew-hook=\u0026#34;./myscript.sh\u0026#34; Some information are added to the environment variables when the hook is used:\n LEGO_ACCOUNT_EMAIL: the email of the account. LEGO_CERT_DOMAIN: the main domain of the certificate. LEGO_CERT_PATH: the path of the certificate. LEGO_CERT_KEY_PATH: the path of the certificate key.  Obtain a certificate using the DNS challenge AWS_REGION=us-east-1 \\ AWS_ACCESS_KEY_ID=my_id \\ AWS_SECRET_ACCESS_KEY=my_key \\ lego --email=\u0026#34;foo@bar.com\u0026#34; --domains=\u0026#34;example.com\u0026#34; --dns=\u0026#34;route53\u0026#34; run Obtain a certificate given a certificate signing request (CSR) generated by something else lego --email=\u0026#34;foo@bar.com\u0026#34; --http --csr=/path/to/csr.pem run (lego will infer the domains to be validated based on the contents of the CSR, so make sure the CSR\u0026rsquo;s Common Name and optional SubjectAltNames are set correctly.)\nMisc HTTP-01 CLI Examples Write HTTP-01 token to already \u0026ldquo;served\u0026rdquo; directory If you have an existing server running on port 80 the --http option needs to also use the --http.webroot option. This just writes the token to the given directory in the folder .well-known/acme-challenge and does not start a server.\nThe given directory should be publicly served as / on the domain(s) for the validation to complete.\nIf the given directory is not publicly served you will have to support rewriting the request to the directory;\nYou could also implement a rewrite to rewrite .well-known/acme-challenge to the given directory .well-known/acme-challenge.\nYou should be able to run an existing webserver on port 80 and have lego write the token file with the HTTP-01 challenge key authorization to \u0026lt;webroot dir\u0026gt;/.well-known/acme-challenge/ by running something like:\nlego --accept-tos -m foo@bar.com --http --http.webroot /path/to/webroot -d example.com run"
},
{
	"uri": "https://go-acme.github.io/lego/dns/edgedns/",
	"title": "Akamai EdgeDNS",
	"tags": [],
	"description": "",
	"content": "Since: v3.9.0\nAkamai edgedns supersedes FastDNS; implementing a DNS provider for solving the DNS-01 challenge using Akamai EdgeDNS\n Code: edgedns  Here is an example bash command using the Akamai EdgeDNS provider:\nAKAMAI_CLIENT_SECRET=abcdefghijklmnopqrstuvwxyz1234567890ABCDEFG= \\ AKAMAI_CLIENT_TOKEN=akab-mnbvcxzlkjhgfdsapoiuytrewq1234567 \\ AKAMAI_HOST=akab-aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa.luna.akamaiapis.net \\ AKAMAI_ACCESS_TOKEN=akab-1234567890qwerty-asdfghjklzxcvtnu \\ lego --email myemail@example.com --dns edgedns --domains my.example.org run Credentials    Environment Variable Name Description     AKAMAI_ACCESS_TOKEN Access token   AKAMAI_CLIENT_SECRET Client secret   AKAMAI_CLIENT_TOKEN Client token   AKAMAI_HOST API host    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nAdditional Configuration    Environment Variable Name Description     AKAMAI_POLLING_INTERVAL Time between DNS propagation check. Default: 15 seconds   AKAMAI_PROPAGATION_TIMEOUT Maximum waiting time for DNS propagation. Default: 3 minutes   AKAMAI_TTL The TTL of the TXT record used for the DNS challenge    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nMore information  API documentation Go client  "
},
{
	"uri": "https://go-acme.github.io/lego/dns/alidns/",
	"title": "Alibaba Cloud DNS",
	"tags": [],
	"description": "",
	"content": "Since: v1.1.0\nConfiguration for Alibaba Cloud DNS.\n Code: alidns  Here is an example bash command using the Alibaba Cloud DNS provider:\nALICLOUD_ACCESS_KEY=abcdefghijklmnopqrstuvwx \\ ALICLOUD_SECRET_KEY=xxxxxxx \\ lego --email myemail@example.com --dns alidns --domains my.example.org run Credentials    Environment Variable Name Description     ALICLOUD_ACCESS_KEY Access key ID   ALICLOUD_SECRET_KEY Access Key secret    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nAdditional Configuration    Environment Variable Name Description     ALICLOUD_HTTP_TIMEOUT API request timeout   ALICLOUD_POLLING_INTERVAL Time between DNS propagation check   ALICLOUD_PROPAGATION_TIMEOUT Maximum waiting time for DNS propagation   ALICLOUD_TTL The TTL of the TXT record used for the DNS challenge    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nMore information  API documentation Go client  "
},
{
	"uri": "https://go-acme.github.io/lego/dns/lightsail/",
	"title": "Amazon Lightsail",
	"tags": [],
	"description": "",
	"content": "Since: v0.5.0\nConfiguration for Amazon Lightsail.\n Code: lightsail  Please contribute by adding a CLI example.\n Credentials    Environment Variable Name Description     AWS_ACCESS_KEY_ID Access key ID   AWS_SECRET_ACCESS_KEY Secret access key   DNS_ZONE DNS zone    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nAdditional Configuration    Environment Variable Name Description     LIGHTSAIL_POLLING_INTERVAL Time between DNS propagation check   LIGHTSAIL_PROPAGATION_TIMEOUT Maximum waiting time for DNS propagation    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nMore information  Go client  "
},
{
	"uri": "https://go-acme.github.io/lego/dns/route53/",
	"title": "Amazon Route 53",
	"tags": [],
	"description": "",
	"content": "Since: v0.3.0\nConfiguration for Amazon Route 53.\n Code: route53  Please contribute by adding a CLI example.\n Credentials    Environment Variable Name Description     AWS_ACCESS_KEY_ID Managed by the AWS client (AWS_ACCESS_KEY_ID_FILE is not supported)   AWS_HOSTED_ZONE_ID Override the hosted zone ID   AWS_PROFILE Managed by the AWS client (AWS_PROFILE_FILE is not supported)   AWS_REGION Managed by the AWS client (AWS_REGION_FILE is not supported)   AWS_SDK_LOAD_CONFIG Retrieve the region from the CLI config file (AWS_SDK_LOAD_CONFIG_FILE is not supported)   AWS_SECRET_ACCESS_KEY Managed by the AWS client (AWS_SECRET_ACCESS_KEY_FILE is not supported)    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nAdditional Configuration    Environment Variable Name Description     AWS_MAX_RETRIES The number of maximum returns the service will use to make an individual API request   AWS_POLLING_INTERVAL Time between DNS propagation check   AWS_PROPAGATION_TIMEOUT Maximum waiting time for DNS propagation   AWS_TTL The TTL of the TXT record used for the DNS challenge    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nDescription AWS Credentials are automatically detected in the following locations and prioritized in the following order:\n Environment variables: AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY, [AWS_SESSION_TOKEN] Shared credentials file (defaults to ~/.aws/credentials, profiles can be specified using AWS_PROFILE) Amazon EC2 IAM role  The AWS Region is automatically detected in the following locations and prioritized in the following order:\n Environment variables: AWS_REGION Shared configuration file if AWS_SDK_LOAD_CONFIG is set (defaults to ~/.aws/config, profiles can be specified using AWS_PROFILE)  If AWS_HOSTED_ZONE_ID is not set, Lego tries to determine the correct public hosted zone via the FQDN.\nSee also:\n sessions Setting AWS Credentials Setting AWS Region  Policy The following AWS IAM policy document describes the permissions required for lego to complete the DNS challenge.\n{ \u0026#34;Version\u0026#34;: \u0026#34;2012-10-17\u0026#34;, \u0026#34;Statement\u0026#34;: [ { \u0026#34;Sid\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;Effect\u0026#34;: \u0026#34;Allow\u0026#34;, \u0026#34;Action\u0026#34;: [ \u0026#34;route53:GetChange\u0026#34;, \u0026#34;route53:ChangeResourceRecordSets\u0026#34;, \u0026#34;route53:ListResourceRecordSets\u0026#34; ], \u0026#34;Resource\u0026#34;: [ \u0026#34;arn:aws:route53:::hostedzone/*\u0026#34;, \u0026#34;arn:aws:route53:::change/*\u0026#34; ] }, { \u0026#34;Sid\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;Effect\u0026#34;: \u0026#34;Allow\u0026#34;, \u0026#34;Action\u0026#34;: \u0026#34;route53:ListHostedZonesByName\u0026#34;, \u0026#34;Resource\u0026#34;: \u0026#34;*\u0026#34; } ] } More information  API documentation Go client  "
},
{
	"uri": "https://go-acme.github.io/lego/dns/arvancloud/",
	"title": "ArvanCloud",
	"tags": [],
	"description": "",
	"content": "Since: v3.8.0\nConfiguration for ArvanCloud.\n Code: arvancloud  Here is an example bash command using the ArvanCloud provider:\nARVANCLOUD_API_KEY=xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx \\ lego --email myemail@example.com --dns arvancloud --domains my.example.org run Credentials    Environment Variable Name Description     ARVANCLOUD_API_KEY API key    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nAdditional Configuration    Environment Variable Name Description     ARVANCLOUD_HTTP_TIMEOUT API request timeout   ARVANCLOUD_POLLING_INTERVAL Time between DNS propagation check   ARVANCLOUD_PROPAGATION_TIMEOUT Maximum waiting time for DNS propagation   ARVANCLOUD_SEQUENCE_INTERVAL Interval between iteration   ARVANCLOUD_TTL The TTL of the TXT record used for the DNS challenge    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nMore information  API documentation  "
},
{
	"uri": "https://go-acme.github.io/lego/dns/auroradns/",
	"title": "Aurora DNS",
	"tags": [],
	"description": "",
	"content": "Since: v0.4.0\nConfiguration for Aurora DNS.\n Code: auroradns  Here is an example bash command using the Aurora DNS provider:\nAURORA_USER_ID=xxxxx \\ AURORA_KEY=yyyyyy \\ lego --email myemail@example.com --dns auroradns --domains my.example.org run Credentials    Environment Variable Name Description     AURORA_KEY User API key   AURORA_USER_ID User ID    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nAdditional Configuration    Environment Variable Name Description     AURORA_ENDPOINT API endpoint URL   AURORA_POLLING_INTERVAL Time between DNS propagation check   AURORA_PROPAGATION_TIMEOUT Maximum waiting time for DNS propagation   AURORA_TTL The TTL of the TXT record used for the DNS challenge    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nMore information  API documentation Go client  "
},
{
	"uri": "https://go-acme.github.io/lego/dns/autodns/",
	"title": "Autodns",
	"tags": [],
	"description": "",
	"content": "Since: v3.2.0\nConfiguration for Autodns.\n Code: autodns  Here is an example bash command using the Autodns provider:\nAUTODNS_API_USER=username \\ AUTODNS_API_PASSWORD=supersecretpassword \\ lego --email myemail@example.com --dns autodns --domains my.example.org run Credentials    Environment Variable Name Description     AUTODNS_API_PASSWORD User Password   AUTODNS_API_USER Username    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nAdditional Configuration    Environment Variable Name Description     AUTODNS_CONTEXT API context (4 for production, 1 for testing. Defaults to 4)   AUTODNS_ENDPOINT API endpoint URL, defaults to https://api.autodns.com/v1/   AUTODNS_HTTP_TIMEOUT API request timeout, defaults to 30 seconds   AUTODNS_POLLING_INTERVAL Time between DNS propagation check   AUTODNS_PROPAGATION_TIMEOUT Maximum waiting time for DNS propagation   AUTODNS_TTL The TTL of the TXT record used for the DNS challenge    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nMore information  API documentation  "
},
{
	"uri": "https://go-acme.github.io/lego/dns/azure/",
	"title": "Azure",
	"tags": [],
	"description": "",
	"content": "Since: v0.4.0\nConfiguration for Azure.\n Code: azure  Please contribute by adding a CLI example.\n Credentials    Environment Variable Name Description     AZURE_CLIENT_ID Client ID   AZURE_CLIENT_SECRET Client secret   AZURE_ENVIRONMENT Azure environment, one of: public, usgovernment, german, and china   AZURE_RESOURCE_GROUP Resource group   AZURE_SUBSCRIPTION_ID Subscription ID   AZURE_TENANT_ID Tenant ID   instance metadata service If the credentials are not set via the environment, then it will attempt to get a bearer token via the instance metadata service.    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nAdditional Configuration    Environment Variable Name Description     AZURE_METADATA_ENDPOINT Metadata Service endpoint URL   AZURE_POLLING_INTERVAL Time between DNS propagation check   AZURE_PROPAGATION_TIMEOUT Maximum waiting time for DNS propagation   AZURE_TTL The TTL of the TXT record used for the DNS challenge    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nMore information  API documentation Go client  "
},
{
	"uri": "https://go-acme.github.io/lego/dns/bindman/",
	"title": "Bindman",
	"tags": [],
	"description": "",
	"content": "Since: v2.6.0\nConfiguration for Bindman.\n Code: bindman  Here is an example bash command using the Bindman provider:\nBINDMAN_MANAGER_ADDRESS=\u0026lt;your bindman manager address\u0026gt; \\ lego --email myemail@example.com --dns bindman --domains my.example.org run Credentials    Environment Variable Name Description     BINDMAN_MANAGER_ADDRESS The server URL, should have scheme, hostname, and port (if required) of the Bindman-DNS Manager server    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nAdditional Configuration    Environment Variable Name Description     BINDMAN_HTTP_TIMEOUT API request timeout   BINDMAN_POLLING_INTERVAL Time between DNS propagation check   BINDMAN_PROPAGATION_TIMEOUT Maximum waiting time for DNS propagation    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nMore information  API documentation Go client  "
},
{
	"uri": "https://go-acme.github.io/lego/dns/bluecat/",
	"title": "Bluecat",
	"tags": [],
	"description": "",
	"content": "Since: v0.5.0\nConfiguration for Bluecat.\n Code: bluecat  Please contribute by adding a CLI example.\n Credentials    Environment Variable Name Description     BLUECAT_CONFIG_NAME Configuration name   BLUECAT_DNS_VIEW External DNS View Name   BLUECAT_PASSWORD API password   BLUECAT_SERVER_URL The server URL, should have scheme, hostname, and port (if required) of the authoritative Bluecat BAM serve   BLUECAT_USER_NAME API username    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nAdditional Configuration    Environment Variable Name Description     BLUECAT_HTTP_TIMEOUT API request timeout   BLUECAT_POLLING_INTERVAL Time between DNS propagation check   BLUECAT_PROPAGATION_TIMEOUT Maximum waiting time for DNS propagation   BLUECAT_TTL The TTL of the TXT record used for the DNS challenge    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\n"
},
{
	"uri": "https://go-acme.github.io/lego/usage/cli/",
	"title": "CLI",
	"tags": [],
	"description": "",
	"content": "Lego can be use as a CLI.\nUsage NAME: lego - Let\u0026#39;s Encrypt client written in Go USAGE: lego [global options] command [command options] [arguments...] COMMANDS: run Register an account, then create and install a certificate revoke Revoke a certificate renew Renew a certificate dnshelp Shows additional help for the \u0026#39;--dns\u0026#39; global option list Display certificates and accounts information. help, h Shows a list of commands or help for one command GLOBAL OPTIONS: --domains value, -d value Add a domain to the process. Can be specified multiple times. --server value, -s value CA hostname (and optionally :port). The server certificate must be trusted in order to avoid further modifications to the client. (default: \u0026#34;https://acme-v02.api.letsencrypt.org/directory\u0026#34;) --accept-tos, -a By setting this flag to true you indicate that you accept the current Let\u0026#39;s Encrypt terms of service. --email value, -m value Email used for registration and recovery contact. --csr value, -c value Certificate signing request filename, if an external CSR is to be used. --eab Use External Account Binding for account registration. Requires --kid and --hmac. --kid value Key identifier from External CA. Used for External Account Binding. --hmac value MAC key from External CA. Should be in Base64 URL Encoding without padding format. Used for External Account Binding. --key-type value, -k value Key type to use for private keys. Supported: rsa2048, rsa4096, rsa8192, ec256, ec384. (default: \u0026#34;ec256\u0026#34;) --filename value (deprecated) Filename of the generated certificate. --path value Directory to use for storing the data. (default: \u0026#34;./.lego\u0026#34;) [$LEGO_PATH] --http Use the HTTP challenge to solve challenges. Can be mixed with other types of challenges. --http.port value Set the port and interface to use for HTTP based challenges to listen on.Supported: interface:port or :port. (default: \u0026#34;:80\u0026#34;) --http.proxy-header value Validate against this HTTP header when solving HTTP based challenges behind a reverse proxy. (default: \u0026#34;Host\u0026#34;) --http.webroot value Set the webroot folder to use for HTTP based challenges to write directly in a file in .well-known/acme-challenge. This disables the built-in server and expects the given directory to be publicly served with access to .well-known/acme-challenge --http.memcached-host value Set the memcached host(s) to use for HTTP based challenges. Challenges will be written to all specified hosts. --tls Use the TLS challenge to solve challenges. Can be mixed with other types of challenges. --tls.port value Set the port and interface to use for TLS based challenges to listen on. Supported: interface:port or :port. (default: \u0026#34;:443\u0026#34;) --dns value Solve a DNS challenge using the specified provider. Can be mixed with other types of challenges. Run \u0026#39;lego dnshelp\u0026#39; for help on usage. --dns.disable-cp By setting this flag to true, disables the need to wait the propagation of the TXT record to all authoritative name servers. --dns.resolvers value Set the resolvers to use for performing recursive DNS queries. Supported: host:port. The default is to use the system resolvers, or Google\u0026#39;s DNS resolvers if the system\u0026#39;s cannot be determined. --http-timeout value Set the HTTP timeout value to a specific value in seconds. (default: 0) --dns-timeout value Set the DNS timeout value to a specific value in seconds. Used only when performing authoritative name servers queries. (default: 10) --pem Generate a .pem file by concatenating the .key and .crt files together. --cert.timeout value Set the certificate timeout value to a specific value in seconds. Only used when obtaining certificates. (default: 30) --help, -h show help --version, -v print the version When using the standard --path option, all certificates and account configurations are saved to a folder .lego in the current working directory.\nLet\u0026rsquo;s Encrypt ACME server lego defaults to communicating with the production Let\u0026rsquo;s Encrypt ACME server. If you\u0026rsquo;d like to test something without issuing real certificates, consider using the staging endpoint instead:\nlego --server=https://acme-staging-v02.api.letsencrypt.org/directory … Running without root privileges The CLI does not require root permissions but needs to bind to port 80 and 443 for certain challenges. To run the CLI without sudo, you have four options:\n Use setcap 'cap_net_bind_service=+ep' /path/to/lego (Linux only) Pass the --http.port or/and the --tls.port option and specify a custom port to bind to. In this case you have to forward port 80\u0026frasl;443 to these custom ports (see Port Usage). Pass the --http.webroot option and specify the path to your webroot folder. In this case the challenge will be written in a file in .well-known/acme-challenge/ inside your webroot. Pass the --dns option and specify a DNS provider.  Port Usage By default lego assumes it is able to bind to ports 80 and 443 to solve challenges. If this is not possible in your environment, you can use the --http.port and --tls.port options to instruct lego to listen on that interface:port for any incoming challenges.\nIf you are using this option, make sure you proxy all of the following traffic to these ports.\nHTTP Port: All plaintext HTTP requests to port 80 which begin with a request path of /.well-known/acme-challenge/ for the HTTP challenge.1\nTLS Port: All TLS handshakes on port 443 for the TLS-ALPN challenge.\nThis traffic redirection is only needed as long as lego solves challenges. As soon as you have received your certificates you can deactivate the forwarding.\n You must ensure that incoming validation requests contains the correct value for the HTTP Host header. If you operate lego behind a non-transparent reverse proxy (such as Apache or NGINX), you might need to alter the header field using --http.proxy-header X-Forwarded-Host. [return]  "
},
{
	"uri": "https://go-acme.github.io/lego/dns/checkdomain/",
	"title": "Checkdomain",
	"tags": [],
	"description": "",
	"content": "Since: v3.3.0\nConfiguration for Checkdomain.\n Code: checkdomain  Here is an example bash command using the Checkdomain provider:\nCHECKDOMAIN_TOKEN=yoursecrettoken \\ lego --email myemail@example.com --dns checkdomain --domains my.example.org run Credentials    Environment Variable Name Description     CHECKDOMAIN_TOKEN API token    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nAdditional Configuration    Environment Variable Name Description     CHECKDOMAIN_ENDPOINT API endpoint URL, defaults to https://api.checkdomain.de   CHECKDOMAIN_HTTP_TIMEOUT API request timeout, defaults to 30 seconds   CHECKDOMAIN_POLLING_INTERVAL Time between DNS propagation check   CHECKDOMAIN_PROPAGATION_TIMEOUT Maximum waiting time for DNS propagation   CHECKDOMAIN_TTL The TTL of the TXT record used for the DNS challenge    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nMore information  API documentation  "
},
{
	"uri": "https://go-acme.github.io/lego/dns/cloudns/",
	"title": "ClouDNS",
	"tags": [],
	"description": "",
	"content": "Since: v2.3.0\nConfiguration for ClouDNS.\n Code: cloudns  Here is an example bash command using the ClouDNS provider:\nCLOUDNS_AUTH_ID=xxxx \\ CLOUDNS_AUTH_PASSWORD=yyyy \\ lego --email myemail@example.com --dns cloudns --domains my.example.org run Credentials    Environment Variable Name Description     CLOUDNS_AUTH_ID The API user ID   CLOUDNS_AUTH_PASSWORD The password for API user ID    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nAdditional Configuration    Environment Variable Name Description     CLOUDNS_HTTP_TIMEOUT API request timeout   CLOUDNS_POLLING_INTERVAL Time between DNS propagation check   CLOUDNS_PROPAGATION_TIMEOUT Maximum waiting time for DNS propagation   CLOUDNS_SUB_AUTH_ID The API sub user ID   CLOUDNS_TTL The TTL of the TXT record used for the DNS challenge    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nMore information  API documentation  "
},
{
	"uri": "https://go-acme.github.io/lego/dns/clouddns/",
	"title": "CloudDNS",
	"tags": [],
	"description": "",
	"content": "Since: v3.6.0\nConfiguration for CloudDNS.\n Code: clouddns  Here is an example bash command using the CloudDNS provider:\nCLOUDDNS_CLIENT_ID=bLsdFAks23429841238feb177a572aX \\ CLOUDDNS_EMAIL=foo@bar.com \\ CLOUDDNS_PASSWORD=b9841238feb177a84330f \\ lego --email myemail@example.com --dns clouddns --domains my.example.org run Credentials    Environment Variable Name Description     CLOUDDNS_CLIENT_ID Client ID   CLOUDDNS_EMAIL Account email   CLOUDDNS_PASSWORD Account password    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nAdditional Configuration    Environment Variable Name Description     CLOUDDNS_HTTP_TIMEOUT API request timeout   CLOUDDNS_POLLING_INTERVAL Time between DNS propagation check   CLOUDDNS_PROPAGATION_TIMEOUT Maximum waiting time for DNS propagation   CLOUDDNS_TTL The TTL of the TXT record used for the DNS challenge    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nMore information  API documentation  "
},
{
	"uri": "https://go-acme.github.io/lego/dns/cloudxns/",
	"title": "CloudXNS",
	"tags": [],
	"description": "",
	"content": "Since: v0.5.0\nConfiguration for CloudXNS.\n Code: cloudxns  Here is an example bash command using the CloudXNS provider:\nCLOUDXNS_API_KEY=xxxx \\ CLOUDXNS_SECRET_KEY=yyyy \\ lego --email myemail@example.com --dns cloudxns --domains my.example.org run Credentials    Environment Variable Name Description     CLOUDXNS_API_KEY The API key   CLOUDXNS_SECRET_KEY The API secret key    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nAdditional Configuration    Environment Variable Name Description     CLOUDXNS_HTTP_TIMEOUT API request timeout   CLOUDXNS_POLLING_INTERVAL Time between DNS propagation check   CLOUDXNS_PROPAGATION_TIMEOUT Maximum waiting time for DNS propagation   CLOUDXNS_TTL The TTL of the TXT record used for the DNS challenge    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nMore information  API documentation  "
},
{
	"uri": "https://go-acme.github.io/lego/dns/cloudflare/",
	"title": "Cloudflare",
	"tags": [],
	"description": "",
	"content": "Since: v0.3.0\nConfiguration for Cloudflare.\n Code: cloudflare  Here is an example bash command using the Cloudflare provider:\nCLOUDFLARE_EMAIL=foo@bar.com \\ CLOUDFLARE_API_KEY=b9841238feb177a84330febba8a83208921177bffe733 \\ lego --email myemail@example.com --dns cloudflare --domains my.example.org run # or CLOUDFLARE_DNS_API_TOKEN=1234567890abcdefghijklmnopqrstuvwxyz \\ lego --email myemail@example.com --dns cloudflare --domains my.example.org run Credentials    Environment Variable Name Description     CF_API_EMAIL Account email   CF_API_KEY API key   CF_DNS_API_TOKEN API token with DNS:Edit permission (since v3.1.0)   CF_ZONE_API_TOKEN API token with Zone:Read permission (since v3.1.0)   CLOUDFLARE_API_KEY Alias to CF_API_KEY   CLOUDFLARE_DNS_API_TOKEN Alias to CF_DNS_API_TOKEN   CLOUDFLARE_EMAIL Alias to CF_API_EMAIL   CLOUDFLARE_ZONE_API_TOKEN Alias to CF_ZONE_API_TOKEN    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nAdditional Configuration    Environment Variable Name Description     CLOUDFLARE_HTTP_TIMEOUT API request timeout   CLOUDFLARE_POLLING_INTERVAL Time between DNS propagation check   CLOUDFLARE_PROPAGATION_TIMEOUT Maximum waiting time for DNS propagation   CLOUDFLARE_TTL The TTL of the TXT record used for the DNS challenge    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nDescription You may use CF_API_EMAIL and CF_API_KEY to authenticate, or CF_DNS_API_TOKEN, or CF_DNS_API_TOKEN and CF_ZONE_API_TOKEN.\nAPI keys If using API keys (CF_API_EMAIL and CF_API_KEY), the Global API Key needs to be used, not the Origin CA Key.\nPlease be aware, that this in principle allows Lego to read and change everything related to this account.\nAPI tokens With API tokens (CF_DNS_API_TOKEN, and optionally CF_ZONE_API_TOKEN), very specific access can be granted to your resources at Cloudflare. See this Cloudflare announcement for details.\nThe main resources Lego cares for are the DNS entries for your Zones. It also need to resolve a domain name to an internal Zone ID in order to manipulate DNS entries.\nHence, you should create an API token with the following permissions:\n Zone / Zone / Read Zone / DNS / Edit  You also need to scope the access to all your domains for this to work. Then pass the API token as CF_DNS_API_TOKEN to Lego.\nAlternatively, if you prefer a more strict set of privileges, you can split the access tokens:\n Create one with Zone / Zone / Read permissions and scope it to all your zones. This is needed to resolve domain names to Zone IDs and can be shared among multiple Lego installations. Pass this API token as CF_ZONE_API_TOKEN to Lego. Create another API token with Zone / DNS / Edit permissions and set the scope to the domains you want to manage with a single Lego installation. Pass this token as CF_DNS_API_TOKEN to Lego. Repeat the previous step for each host you want to run Lego on.  This \u0026ldquo;paranoid\u0026rdquo; setup is mainly interesting for users who manage many zones/domains with a single Cloudflare account. It follows the principle of least privilege and limits the possible damage, should one of the hosts become compromised.\nMore information  API documentation Go client  "
},
{
	"uri": "https://go-acme.github.io/lego/dns/conoha/",
	"title": "ConoHa",
	"tags": [],
	"description": "",
	"content": "Since: v1.2.0\nConfiguration for ConoHa.\n Code: conoha  Here is an example bash command using the ConoHa provider:\nCONOHA_TENANT_ID=487727e3921d44e3bfe7ebb337bf085e \\ CONOHA_API_USERNAME=xxxx \\ CONOHA_API_PASSWORD=yyyy \\ lego --email myemail@example.com --dns conoha --domains my.example.org run Credentials    Environment Variable Name Description     CONOHA_API_PASSWORD The API password   CONOHA_API_USERNAME The API username   CONOHA_TENANT_ID Tenant ID    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nAdditional Configuration    Environment Variable Name Description     CONOHA_HTTP_TIMEOUT API request timeout   CONOHA_POLLING_INTERVAL Time between DNS propagation check   CONOHA_PROPAGATION_TIMEOUT Maximum waiting time for DNS propagation   CONOHA_REGION The region   CONOHA_TTL The TTL of the TXT record used for the DNS challenge    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nMore information  API documentation  "
},
{
	"uri": "https://go-acme.github.io/lego/dns/constellix/",
	"title": "Constellix",
	"tags": [],
	"description": "",
	"content": "Since: v3.4.0\nConfiguration for Constellix.\n Code: constellix  Here is an example bash command using the Constellix provider:\nCONSTELLIX_API_KEY=xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx \\ CONSTELLIX_SECRET_KEY=xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx \\ lego --email myemail@example.com --dns constellix --domains my.example.org run Credentials    Environment Variable Name Description     CONSTELLIX_API_KEY User API key   CONSTELLIX_SECRET_KEY User secret key    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nAdditional Configuration    Environment Variable Name Description     CONSTELLIX_HTTP_TIMEOUT API request timeout   CONSTELLIX_POLLING_INTERVAL Time between DNS propagation check   CONSTELLIX_PROPAGATION_TIMEOUT Maximum waiting time for DNS propagation   CONSTELLIX_TTL The TTL of the TXT record used for the DNS challenge    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nMore information  API documentation  "
},
{
	"uri": "https://go-acme.github.io/lego/dns/dnsmadeeasy/",
	"title": "DNS Made Easy",
	"tags": [],
	"description": "",
	"content": "Since: v0.4.0\nConfiguration for DNS Made Easy.\n Code: dnsmadeeasy  Here is an example bash command using the DNS Made Easy provider:\nDNSMADEEASY_API_KEY=xxxxxx \\ DNSMADEEASY_API_SECRET=yyyyy \\ lego --email myemail@example.com --dns dnsmadeeasy --domains my.example.org run Credentials    Environment Variable Name Description     DNSMADEEASY_API_KEY The API key   DNSMADEEASY_API_SECRET The API Secret key    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nAdditional Configuration    Environment Variable Name Description     DNSMADEEASY_HTTP_TIMEOUT API request timeout   DNSMADEEASY_POLLING_INTERVAL Time between DNS propagation check   DNSMADEEASY_PROPAGATION_TIMEOUT Maximum waiting time for DNS propagation   DNSMADEEASY_SANDBOX Activate the sandbox (boolean)   DNSMADEEASY_TTL The TTL of the TXT record used for the DNS challenge    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nMore information  API documentation  "
},
{
	"uri": "https://go-acme.github.io/lego/dns/dnspod/",
	"title": "DNSPod",
	"tags": [],
	"description": "",
	"content": "Since: v0.4.0\nConfiguration for DNSPod.\n Code: dnspod  Here is an example bash command using the DNSPod provider:\nDNSPOD_API_KEY=xxxxxx \\ lego --email myemail@example.com --dns dnspod --domains my.example.org run Credentials    Environment Variable Name Description     DNSPOD_API_KEY The user token    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nAdditional Configuration    Environment Variable Name Description     DNSPOD_HTTP_TIMEOUT API request timeout   DNSPOD_POLLING_INTERVAL Time between DNS propagation check   DNSPOD_PROPAGATION_TIMEOUT Maximum waiting time for DNS propagation   DNSPOD_TTL The TTL of the TXT record used for the DNS challenge    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nMore information  API documentation Go client  "
},
{
	"uri": "https://go-acme.github.io/lego/dns/dnsimple/",
	"title": "DNSimple",
	"tags": [],
	"description": "",
	"content": "Since: v0.3.0\nConfiguration for DNSimple.\n Code: dnsimple  Here is an example bash command using the DNSimple provider:\nDNSIMPLE_OAUTH_TOKEN=1234567890abcdefghijklmnopqrstuvwxyz \\ lego --email myemail@example.com --dns dnsimple --domains my.example.org run Credentials    Environment Variable Name Description     DNSIMPLE_OAUTH_TOKEN OAuth token    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nAdditional Configuration    Environment Variable Name Description     DNSIMPLE_BASE_URL API endpoint URL   DNSIMPLE_POLLING_INTERVAL Time between DNS propagation check   DNSIMPLE_PROPAGATION_TIMEOUT Maximum waiting time for DNS propagation   DNSIMPLE_TTL The TTL of the TXT record used for the DNS challenge    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nDescription DNSIMPLE_BASE_URL is optional and must be set to production (https://api.dnsimple.com). if DNSIMPLE_BASE_URL is not defined or empty, the production URL is used by default.\nWhile you can manage DNS records in the DNSimple Sandbox environment, DNS records will not resolve and you will not be able to satisfy the ACME DNS challenge.\nTo authenticate you need to provide a valid API token. HTTP Basic Authentication is intentionally not supported.\nAPI tokens You can generate a new API token from your account page. Only Account API tokens are supported, if you try to use an User API token you will receive an error message.\nMore information  API documentation Go client  "
},
{
	"uri": "https://go-acme.github.io/lego/dns/designate/",
	"title": "Designate DNSaaS for Openstack",
	"tags": [],
	"description": "",
	"content": "Since: v2.2.0\nConfiguration for Designate DNSaaS for Openstack.\n Code: designate  Please contribute by adding a CLI example.\n Credentials    Environment Variable Name Description     OS_AUTH_URL Identity endpoint URL   OS_PASSWORD Password   OS_PROJECT_NAME Project name   OS_REGION_NAME Region name   OS_USERNAME Username    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nAdditional Configuration    Environment Variable Name Description     DESIGNATE_POLLING_INTERVAL Time between DNS propagation check   DESIGNATE_PROPAGATION_TIMEOUT Maximum waiting time for DNS propagation   DESIGNATE_TTL The TTL of the TXT record used for the DNS challenge   OS_PROJECT_ID Project ID   OS_TENANT_NAME Tenant name (deprecated see OS_PROJECT_NAME and OS_PROJECT_ID)    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nMore information  API documentation Go client  "
},
{
	"uri": "https://go-acme.github.io/lego/dns/digitalocean/",
	"title": "Digital Ocean",
	"tags": [],
	"description": "",
	"content": "Since: v0.3.0\nConfiguration for Digital Ocean.\n Code: digitalocean  Here is an example bash command using the Digital Ocean provider:\nDO_AUTH_TOKEN=xxxxxx \\ lego --email myemail@example.com --dns digitalocean --domains my.example.org run Credentials    Environment Variable Name Description     DO_AUTH_TOKEN Authentication token    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nAdditional Configuration    Environment Variable Name Description     DO_HTTP_TIMEOUT API request timeout   DO_POLLING_INTERVAL Time between DNS propagation check   DO_PROPAGATION_TIMEOUT Maximum waiting time for DNS propagation   DO_TTL The TTL of the TXT record used for the DNS challenge    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nMore information  API documentation  "
},
{
	"uri": "https://go-acme.github.io/lego/dns/dode/",
	"title": "Domain Offensive (do.de)",
	"tags": [],
	"description": "",
	"content": "Since: v2.4.0\nConfiguration for Domain Offensive (do.de).\n Code: dode  Here is an example bash command using the Domain Offensive (do.de) provider:\nDODE_TOKEN=xxxxxx \\ lego --email myemail@example.com --dns dode --domains my.example.org run Credentials    Environment Variable Name Description     DODE_TOKEN API token    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nAdditional Configuration    Environment Variable Name Description     DODE_HTTP_TIMEOUT API request timeout   DODE_POLLING_INTERVAL Time between DNS propagation check   DODE_PROPAGATION_TIMEOUT Maximum waiting time for DNS propagation   DODE_SEQUENCE_INTERVAL Interval between iteration   DODE_TTL The TTL of the TXT record used for the DNS challenge    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nMore information  API documentation  "
},
{
	"uri": "https://go-acme.github.io/lego/dns/domeneshop/",
	"title": "Domeneshop",
	"tags": [],
	"description": "",
	"content": "Since: v4.3.0\nConfiguration for Domeneshop.\n Code: domeneshop  Here is an example bash command using the Domeneshop provider:\nDOMENESHOP_API_TOKEN=\u0026lt;token\u0026gt; \\ DOMENESHOP_API_SECRET=\u0026lt;secret\u0026gt; \\ lego --email example@example.com --dns domeneshop --domains example.com run Credentials    Environment Variable Name Description     DOMENESHOP_API_PASSWORD API secret   DOMENESHOP_API_TOKEN API token    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nAdditional Configuration    Environment Variable Name Description     DOMENESHOP_HTTP_TIMEOUT API request timeout   DOMENESHOP_POLLING_INTERVAL Time between DNS propagation check   DOMENESHOP_PROPAGATION_TIMEOUT Maximum waiting time for DNS propagation    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nAPI credentials Visit the following page for information on how to create API credentials with Domeneshop:\nhttps://api.domeneshop.no/docs/#section/Authentication\nMore information  API documentation  "
},
{
	"uri": "https://go-acme.github.io/lego/dns/dreamhost/",
	"title": "DreamHost",
	"tags": [],
	"description": "",
	"content": "Since: v1.1.0\nConfiguration for DreamHost.\n Code: dreamhost  Here is an example bash command using the DreamHost provider:\nDREAMHOST_API_KEY=\u0026#34;YOURAPIKEY\u0026#34; \\ lego --email myemail@example.com --dns dreamhost --domains my.example.org run Credentials    Environment Variable Name Description     DREAMHOST_API_KEY The API key    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nAdditional Configuration    Environment Variable Name Description     DREAMHOST_HTTP_TIMEOUT API request timeout   DREAMHOST_POLLING_INTERVAL Time between DNS propagation check   DREAMHOST_PROPAGATION_TIMEOUT Maximum waiting time for DNS propagation   DREAMHOST_TTL The TTL of the TXT record used for the DNS challenge    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nMore information  API documentation  "
},
{
	"uri": "https://go-acme.github.io/lego/dns/duckdns/",
	"title": "Duck DNS",
	"tags": [],
	"description": "",
	"content": "Since: v0.5.0\nConfiguration for Duck DNS.\n Code: duckdns  Here is an example bash command using the Duck DNS provider:\nDUCKDNS_TOKEN=xxxxxx \\ lego --email myemail@example.com --dns duckdns --domains my.example.org run Credentials    Environment Variable Name Description     DUCKDNS_TOKEN Account token    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nAdditional Configuration    Environment Variable Name Description     DUCKDNS_HTTP_TIMEOUT API request timeout   DUCKDNS_POLLING_INTERVAL Time between DNS propagation check   DUCKDNS_PROPAGATION_TIMEOUT Maximum waiting time for DNS propagation   DUCKDNS_SEQUENCE_INTERVAL Interval between iteration   DUCKDNS_TTL The TTL of the TXT record used for the DNS challenge    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nMore information  API documentation  "
},
{
	"uri": "https://go-acme.github.io/lego/dns/dyn/",
	"title": "Dyn",
	"tags": [],
	"description": "",
	"content": "Since: v0.3.0\nConfiguration for Dyn.\n Code: dyn  Here is an example bash command using the Dyn provider:\nDYN_CUSTOMER_NAME=xxxxxx \\ DYN_USER_NAME=yyyyy \\ DYN_PASSWORD=zzzz \\ lego --email myemail@example.com --dns dyn --domains my.example.org run Credentials    Environment Variable Name Description     DYN_CUSTOMER_NAME Customer name   DYN_PASSWORD Password   DYN_USER_NAME User name    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nAdditional Configuration    Environment Variable Name Description     DYN_HTTP_TIMEOUT API request timeout   DYN_POLLING_INTERVAL Time between DNS propagation check   DYN_PROPAGATION_TIMEOUT Maximum waiting time for DNS propagation   DYN_TTL The TTL of the TXT record used for the DNS challenge    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nMore information  API documentation  "
},
{
	"uri": "https://go-acme.github.io/lego/dns/dynu/",
	"title": "Dynu",
	"tags": [],
	"description": "",
	"content": "Since: v3.5.0\nConfiguration for Dynu.\n Code: dynu  Here is an example bash command using the Dynu provider:\nDYNU_API_KEY=1234567890abcdefghijklmnopqrstuvwxyz \\ lego --email myemail@example.com --dns dynu --domains my.example.org run Credentials    Environment Variable Name Description     DYNU_API_KEY API key    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nAdditional Configuration    Environment Variable Name Description     DYNU_HTTP_TIMEOUT API request timeout   DYNU_POLLING_INTERVAL Time between DNS propagation check   DYNU_PROPAGATION_TIMEOUT Maximum waiting time for DNS propagation   DYNU_TTL The TTL of the TXT record used for the DNS challenge    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nMore information  API documentation  "
},
{
	"uri": "https://go-acme.github.io/lego/dns/easydns/",
	"title": "EasyDNS",
	"tags": [],
	"description": "",
	"content": "Since: v2.6.0\nConfiguration for EasyDNS.\n Code: easydns  Here is an example bash command using the EasyDNS provider:\nEASYDNS_TOKEN=\u0026lt;your token\u0026gt; \\ EASYDNS_KEY=\u0026lt;your key\u0026gt; \\ lego --email myemail@example.com --dns easydns --domains my.example.org run Credentials    Environment Variable Name Description     EASYDNS_KEY API Key   EASYDNS_TOKEN API Token    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nAdditional Configuration    Environment Variable Name Description     EASYDNS_ENDPOINT The endpoint URL of the API Server   EASYDNS_HTTP_TIMEOUT API request timeout   EASYDNS_POLLING_INTERVAL Time between DNS propagation check   EASYDNS_PROPAGATION_TIMEOUT Maximum waiting time for DNS propagation   EASYDNS_SEQUENCE_INTERVAL Time between sequential requests   EASYDNS_TTL The TTL of the TXT record used for the DNS challenge    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nTo test with the sandbox environment set EASYDNS_ENDPOINT=https://sandbox.rest.easydns.net\nMore information  API documentation  "
},
{
	"uri": "https://go-acme.github.io/lego/dns/exoscale/",
	"title": "Exoscale",
	"tags": [],
	"description": "",
	"content": "Since: v0.4.0\nConfiguration for Exoscale.\n Code: exoscale  Here is an example bash command using the Exoscale provider:\nEXOSCALE_API_KEY=abcdefghijklmnopqrstuvwx \\ EXOSCALE_API_SECRET=xxxxxxx \\ lego --email myemail@example.com --dns exoscale --domains my.example.org run Credentials    Environment Variable Name Description     EXOSCALE_API_KEY API key   EXOSCALE_API_SECRET API secret    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nAdditional Configuration    Environment Variable Name Description     EXOSCALE_ENDPOINT API endpoint URL   EXOSCALE_HTTP_TIMEOUT API request timeout   EXOSCALE_POLLING_INTERVAL Time between DNS propagation check   EXOSCALE_PROPAGATION_TIMEOUT Maximum waiting time for DNS propagation   EXOSCALE_TTL The TTL of the TXT record used for the DNS challenge    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nMore information  API documentation Go client  "
},
{
	"uri": "https://go-acme.github.io/lego/dns/exec/",
	"title": "External program",
	"tags": [],
	"description": "",
	"content": "Since: v0.5.0 Solving the DNS-01 challenge using an external program.\n Code: exec  Here is an example bash command using the External program provider:\nEXEC_PATH=/the/path/to/myscript.sh \\ lego --email myemail@example.com --dns exec --domains my.example.org run Base Configuration    Environment Variable Name Description     EXEC_MODE RAW, none   EXEC_PATH The path of the the external program.    Additional Configuration    Environment Variable Name Description     EXEC_POLLING_INTERVAL Time between DNS propagation check.   EXEC_PROPAGATION_TIMEOUT Maximum waiting time for DNS propagation.    Description The file name of the external program is specified in the environment variable EXEC_PATH.\nWhen it is run by lego, three command-line parameters are passed to it: The action (\u0026ldquo;present\u0026rdquo; or \u0026ldquo;cleanup\u0026rdquo;), the fully-qualified domain name and the value for the record.\nFor example, requesting a certificate for the domain \u0026lsquo;my.example.org\u0026rsquo; can be achieved by calling lego as follows:\nEXEC_PATH=./update-dns.sh \\ \tlego --email myemail@example.com \\ \t--dns exec \\ \t--domains my.example.org run It will then call the program \u0026lsquo;./update-dns.sh\u0026rsquo; with like this:\n./update-dns.sh \u0026#34;present\u0026#34; \u0026#34;_acme-challenge.my.example.org.\u0026#34; \u0026#34;MsijOYZxqyjGnFGwhjrhfg-Xgbl5r68WPda0J9EgqqI\u0026#34; The program then needs to make sure the record is inserted. When it returns an error via a non-zero exit code, lego aborts.\nWhen the record is to be removed again, the program is called with the first command-line parameter set to cleanup instead of present.\nIf you want to use the raw domain, token, and keyAuth values with your program, you can set EXEC_MODE=RAW:\nEXEC_MODE=RAW \\ EXEC_PATH=./update-dns.sh \\ \tlego --email myemail@example.com \\ \t--dns exec \\ \t--domains my.example.org run It will then call the program ./update-dns.sh like this:\n./update-dns.sh \u0026#34;present\u0026#34; \u0026#34;my.example.org.\u0026#34; \u0026#34;--\u0026#34; \u0026#34;some-token\u0026#34; \u0026#34;KxAy-J3NwUmg9ZQuM-gP_Mq1nStaYSaP9tYQs5_-YsE.ksT-qywTd8058G-SHHWA3RAN72Pr0yWtPYmmY5UBpQ8\u0026#34; Commands The -- is because the token MAY start with a -, and the called program may try and interpret a - as indicating a flag. In the case of urfave, which is commonly used, you can use the -- delimiter to specify the start of positional arguments, and handle such a string safely.\n Present    Mode Command     default myprogram present -- \u0026lt;FQDN\u0026gt; \u0026lt;record\u0026gt;   RAW myprogram present -- \u0026lt;domain\u0026gt; \u0026lt;token\u0026gt; \u0026lt;key_auth\u0026gt;    Cleanup    Mode Command     default myprogram cleanup -- \u0026lt;FQDN\u0026gt; \u0026lt;record\u0026gt;   RAW myprogram cleanup -- \u0026lt;domain\u0026gt; \u0026lt;token\u0026gt; \u0026lt;key_auth\u0026gt;    Timeout The command have to display propagation timeout and polling interval into Stdout.\nThe values must be formatted as JSON, and times are in seconds. Example: {\u0026quot;timeout\u0026quot;: 30, \u0026quot;interval\u0026quot;: 5}\nIf an error occurs or if the command is not provided: the default display propagation timeout and polling interval are used.\n   Mode Command     default myprogram timeout   RAW myprogram timeout    "
},
{
	"uri": "https://go-acme.github.io/lego/dns/gandi/",
	"title": "Gandi",
	"tags": [],
	"description": "",
	"content": "Since: v0.3.0\nConfiguration for Gandi.\n Code: gandi  Here is an example bash command using the Gandi provider:\nGANDI_API_KEY=abcdefghijklmnopqrstuvwx \\ lego --email myemail@example.com --dns gandi --domains my.example.org run Credentials    Environment Variable Name Description     GANDI_API_KEY API key    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nAdditional Configuration    Environment Variable Name Description     GANDI_HTTP_TIMEOUT API request timeout   GANDI_POLLING_INTERVAL Time between DNS propagation check   GANDI_PROPAGATION_TIMEOUT Maximum waiting time for DNS propagation   GANDI_TTL The TTL of the TXT record used for the DNS challenge    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nMore information  API documentation  "
},
{
	"uri": "https://go-acme.github.io/lego/dns/gandiv5/",
	"title": "Gandi Live DNS (v5)",
	"tags": [],
	"description": "",
	"content": "Since: v0.5.0\nConfiguration for Gandi Live DNS (v5).\n Code: gandiv5  Here is an example bash command using the Gandi Live DNS (v5) provider:\nGANDIV5_API_KEY=abcdefghijklmnopqrstuvwx \\ lego --email myemail@example.com --dns gandiv5 --domains my.example.org run Credentials    Environment Variable Name Description     GANDIV5_API_KEY API key    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nAdditional Configuration    Environment Variable Name Description     GANDIV5_HTTP_TIMEOUT API request timeout   GANDIV5_POLLING_INTERVAL Time between DNS propagation check   GANDIV5_PROPAGATION_TIMEOUT Maximum waiting time for DNS propagation   GANDIV5_TTL The TTL of the TXT record used for the DNS challenge    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nMore information  API documentation  "
},
{
	"uri": "https://go-acme.github.io/lego/dns/glesys/",
	"title": "Glesys",
	"tags": [],
	"description": "",
	"content": "Since: v0.5.0\nConfiguration for Glesys.\n Code: glesys  Here is an example bash command using the Glesys provider:\nGLESYS_API_USER=xxxxx \\ GLESYS_API_KEY=yyyyy \\ lego --email myemail@example.com --dns glesys --domains my.example.org run Credentials    Environment Variable Name Description     GLESYS_API_KEY API key   GLESYS_API_USER API user    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nAdditional Configuration    Environment Variable Name Description     GLESYS_HTTP_TIMEOUT API request timeout   GLESYS_POLLING_INTERVAL Time between DNS propagation check   GLESYS_PROPAGATION_TIMEOUT Maximum waiting time for DNS propagation   GLESYS_TTL The TTL of the TXT record used for the DNS challenge    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nMore information  API documentation  "
},
{
	"uri": "https://go-acme.github.io/lego/dns/godaddy/",
	"title": "Go Daddy",
	"tags": [],
	"description": "",
	"content": "Since: v0.5.0\nConfiguration for Go Daddy.\n Code: godaddy  Here is an example bash command using the Go Daddy provider:\nGODADDY_API_KEY=xxxxxxxx \\ GODADDY_API_SECRET=yyyyyyyy \\ lego --email myemail@example.com --dns godaddy --domains my.example.org run Credentials    Environment Variable Name Description     GODADDY_API_KEY API key   GODADDY_API_SECRET API secret    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nAdditional Configuration    Environment Variable Name Description     GODADDY_HTTP_TIMEOUT API request timeout   GODADDY_POLLING_INTERVAL Time between DNS propagation check   GODADDY_PROPAGATION_TIMEOUT Maximum waiting time for DNS propagation   GODADDY_SEQUENCE_INTERVAL Interval between iteration   GODADDY_TTL The TTL of the TXT record used for the DNS challenge    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nMore information  API documentation  "
},
{
	"uri": "https://go-acme.github.io/lego/dns/gcloud/",
	"title": "Google Cloud",
	"tags": [],
	"description": "",
	"content": "Since: v0.3.0\nConfiguration for Google Cloud.\n Code: gcloud  Please contribute by adding a CLI example.\n Credentials    Environment Variable Name Description     Application Default Credentials Documentation   GCE_PROJECT Project name (by default, the project name is auto-detected by using the metadata service)   GCE_SERVICE_ACCOUNT Account   GCE_SERVICE_ACCOUNT_FILE Account file path    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nAdditional Configuration    Environment Variable Name Description     GCE_ALLOW_PRIVATE_ZONE Allows requested domain to be in private DNS zone, works only with a private ACME server (by default: false)   GCE_POLLING_INTERVAL Time between DNS propagation check   GCE_PROPAGATION_TIMEOUT Maximum waiting time for DNS propagation   GCE_TTL The TTL of the TXT record used for the DNS challenge    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nMore information  API documentation Go client  "
},
{
	"uri": "https://go-acme.github.io/lego/dns/httpreq/",
	"title": "HTTP request",
	"tags": [],
	"description": "",
	"content": "Since: v2.0.0\nConfiguration for HTTP request.\n Code: httpreq  Here is an example bash command using the HTTP request provider:\nHTTPREQ_ENDPOINT=http://my.server.com:9090 \\ lego --email myemail@example.com --dns httpreq --domains my.example.org run Credentials    Environment Variable Name Description     HTTPREQ_ENDPOINT The URL of the server   HTTPREQ_MODE RAW, none    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nAdditional Configuration    Environment Variable Name Description     HTTPREQ_HTTP_TIMEOUT API request timeout   HTTPREQ_PASSWORD Basic authentication password   HTTPREQ_POLLING_INTERVAL Time between DNS propagation check   HTTPREQ_PROPAGATION_TIMEOUT Maximum waiting time for DNS propagation   HTTPREQ_USERNAME Basic authentication username    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nDescription The server must provide:\n POST /present POST /cleanup  The URL of the server must be define by HTTPREQ_ENDPOINT.\nMode There are 2 modes (HTTPREQ_MODE):\n default mode:\n{ \u0026#34;fqdn\u0026#34;: \u0026#34;_acme-challenge.domain.\u0026#34;, \u0026#34;value\u0026#34;: \u0026#34;LHDhK3oGRvkiefQnx7OOczTY5Tic_xZ6HcMOc_gmtoM\u0026#34; } RAW\n{ \u0026#34;domain\u0026#34;: \u0026#34;domain\u0026#34;, \u0026#34;token\u0026#34;: \u0026#34;token\u0026#34;, \u0026#34;keyAuth\u0026#34;: \u0026#34;key\u0026#34; }  Authentication Basic authentication (optional) can be set with some environment variables:\n HTTPREQ_USERNAME and HTTPREQ_PASSWORD both values must be set, otherwise basic authentication is not defined.  "
},
{
	"uri": "https://go-acme.github.io/lego/dns/hetzner/",
	"title": "Hetzner",
	"tags": [],
	"description": "",
	"content": "Since: v3.7.0\nConfiguration for Hetzner.\n Code: hetzner  Here is an example bash command using the Hetzner provider:\nHETZNER_API_KEY=xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx \\ lego -email myemail@example.com --dns hetzner --domains my.example.org -run Credentials    Environment Variable Name Description     HETZNER_API_KEY API key    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nAdditional Configuration    Environment Variable Name Description     HETZNER_HTTP_TIMEOUT API request timeout   HETZNER_POLLING_INTERVAL Time between DNS propagation check   HETZNER_PROPAGATION_TIMEOUT Maximum waiting time for DNS propagation   HETZNER_SEQUENCE_INTERVAL Interval between iteration   HETZNER_TTL The TTL of the TXT record used for the DNS challenge    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nMore information  API documentation  "
},
{
	"uri": "https://go-acme.github.io/lego/dns/hostingde/",
	"title": "Hosting.de",
	"tags": [],
	"description": "",
	"content": "Since: v1.1.0\nConfiguration for Hosting.de.\n Code: hostingde  Here is an example bash command using the Hosting.de provider:\nHOSTINGDE_API_KEY=xxxxxxxx \\ HOSTINGDE_ZONE_NAME=yyyyy \\ lego -email myemail@example.com --dns hostingde --domains my.example.org -run Credentials    Environment Variable Name Description     HOSTINGDE_API_KEY API key   HOSTINGDE_ZONE_NAME Zone name in ACE format    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nAdditional Configuration    Environment Variable Name Description     HOSTINGDE_HTTP_TIMEOUT API request timeout   HOSTINGDE_POLLING_INTERVAL Time between DNS propagation check   HOSTINGDE_PROPAGATION_TIMEOUT Maximum waiting time for DNS propagation   HOSTINGDE_TTL The TTL of the TXT record used for the DNS challenge    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nMore information  API documentation  "
},
{
	"uri": "https://go-acme.github.io/lego/dns/hurricane/",
	"title": "Hurricane Electric DNS",
	"tags": [],
	"description": "",
	"content": "Since: v4.3.0\nConfiguration for Hurricane Electric DNS.\n Code: hurricane  Here is an example bash command using the Hurricane Electric DNS provider:\nHURRICANE_TOKENS=example.org:token \\ lego --email myemail@example.com --dns hurricane -d example.org -d *.example.org run HURRICANE_TOKENS=my.example.org:token1,demo.example.org:token2 \\ lego -m myemail@example.com --dns hurricane -d my.example.org -d demo.example.org Credentials    Environment Variable Name Description     HURRICANE_TOKENS TXT record names and tokens    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nBefore using lego to request a certificate for a given domain or wildcard (such as my.example.org or *.my.example.org), create a TXT record named _acme-challenge.my.example.org, and enable dynamic updates on it. Generate a token for each URL with Hurricane Electric\u0026rsquo;s UI, and copy it down. Stick to alphanumeric tokens for greatest reliability.\nTo authenticate with the Hurricane Electric API, add each record name/token pair you want to update to the HURRICANE_TOKENS environment variable, as shown in the examples. Record names (without the _acme-challenge. component) and their tokens are separated with colons, while the credential pairs are concatenated into a comma-separated list, like so:\nHURRICANE_TOKENS=my.example.org:token1,demo.example.org:token2  If you are issuing both a wildcard certificate and a standard certificate for a given subdomain, you should not have repeat entries for that name, as both will use the same credential.\nHURRICANE_TOKENS=example.org:token  More information  API documentation  "
},
{
	"uri": "https://go-acme.github.io/lego/dns/hyperone/",
	"title": "HyperOne",
	"tags": [],
	"description": "",
	"content": "Since: v3.9.0\nConfiguration for HyperOne.\n Code: hyperone  Here is an example bash command using the HyperOne provider:\nlego --email myemail@example.com --dns hyperone --domains my.example.org run Additional Configuration    Environment Variable Name Description     HYPERONE_API_URL Allows to pass custom API Endpoint to be used in the challenge (default https://api.hyperone.com/v2)   HYPERONE_LOCATION_ID Specifies location (region) to be used in API calls. (default pl-waw-1)   HYPERONE_PASSPORT_LOCATION Allows to pass custom passport file location (default ~/.h1/passport.json)   HYPERONE_POLLING_INTERVAL Time between DNS propagation check   HYPERONE_PROPAGATION_TIMEOUT Maximum waiting time for DNS propagation   HYPERONE_TTL The TTL of the TXT record used for the DNS challenge    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nDescription Default configuration does not require any additional environment variables, just a passport file in ~/.h1/passport.json location.\nGenerating passport file using H1 CLI To use this application you have to generate passport file for sa:\nh1 iam project sa credential generate --name my-passport --project \u0026lt;project ID\u0026gt; --sa \u0026lt;sa ID\u0026gt; --passport-output-file ~/.h1/passport.json  Required permissions The application requires following permissions: - dns/zone/list - dns/zone.recordset/list - dns/zone.recordset/create - dns/zone.recordset/delete - dns/zone.record/create - dns/zone.record/list - dns/zone.record/delete\nAll required permissions are available via platform role tool.lego.\nMore information  API documentation  "
},
{
	"uri": "https://go-acme.github.io/lego/dns/inwx/",
	"title": "INWX",
	"tags": [],
	"description": "",
	"content": "Since: v2.0.0\nConfiguration for INWX.\n Code: inwx  Here is an example bash command using the INWX provider:\nINWX_USERNAME=xxxxxxxxxx \\ INWX_PASSWORD=yyyyyyyyyy \\ lego --email myemail@example.com --dns inwx --domains my.example.org run # 2FA INWX_USERNAME=xxxxxxxxxx \\ INWX_PASSWORD=yyyyyyyyyy \\ INWX_SHARED_SECRET=zzzzzzzzzz \\ lego --email myemail@example.com --dns inwx --domains my.example.org run Credentials    Environment Variable Name Description     INWX_PASSWORD Password   INWX_USERNAME Username    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nAdditional Configuration    Environment Variable Name Description     INWX_POLLING_INTERVAL Time between DNS propagation check   INWX_PROPAGATION_TIMEOUT Maximum waiting time for DNS propagation (default 360s)   INWX_SANDBOX Activate the sandbox (boolean)   INWX_SHARED_SECRET shared secret related to 2FA   INWX_TTL The TTL of the TXT record used for the DNS challenge    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nMore information  API documentation Go client  "
},
{
	"uri": "https://go-acme.github.io/lego/dns/infomaniak/",
	"title": "Infomaniak",
	"tags": [],
	"description": "",
	"content": "Since: v4.1.0\nConfiguration for Infomaniak.\n Code: infomaniak  Here is an example bash command using the Infomaniak provider:\nINFOMANIAK_ACCESS_TOKEN=1234567898765432 \\ lego --email myemail@example.com --dns infomaniak --domains my.example.org run Credentials    Environment Variable Name Description     INFOMANIAK_ACCESS_TOKEN Access token    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nAdditional Configuration    Environment Variable Name Description     INFOMANIAK_ENDPOINT https://api.infomaniak.com   INFOMANIAK_HTTP_TIMEOUT API request timeout   INFOMANIAK_POLLING_INTERVAL Time between DNS propagation check   INFOMANIAK_PROPAGATION_TIMEOUT Maximum waiting time for DNS propagation   INFOMANIAK_TTL The TTL of the TXT record used for the DNS challenge in seconds    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nAccess token Access token can be created at the url https://manager.infomaniak.com/v3/infomaniak-api. You will need domain scope. ```\nMore information  API documentation  "
},
{
	"uri": "https://go-acme.github.io/lego/dns/iij/",
	"title": "Internet Initiative Japan",
	"tags": [],
	"description": "",
	"content": "Since: v1.1.0\nConfiguration for Internet Initiative Japan.\n Code: iij  Here is an example bash command using the Internet Initiative Japan provider:\nIIJ_API_ACCESS_KEY=xxxxxxxx \\ IIJ_API_SECRET_KEY=yyyyyy \\ IIJ_DO_SERVICE_CODE=zzzzzz \\ lego -email myemail@example.com --dns iij --domains my.example.org -run Credentials    Environment Variable Name Description     IIJ_API_ACCESS_KEY API access key   IIJ_API_SECRET_KEY API secret key   IIJ_DO_SERVICE_CODE DO service code    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nAdditional Configuration    Environment Variable Name Description     IIJ_POLLING_INTERVAL Time between DNS propagation check   IIJ_PROPAGATION_TIMEOUT Maximum waiting time for DNS propagation   IIJ_TTL The TTL of the TXT record used for the DNS challenge    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nMore information  API documentation Go client  "
},
{
	"uri": "https://go-acme.github.io/lego/dns/ionos/",
	"title": "Ionos",
	"tags": [],
	"description": "",
	"content": "Since: v4.2.0\nConfiguration for Ionos.\n Code: ionos  Here is an example bash command using the Ionos provider:\nIONOS_API_KEY=xxxxxxxx \\ lego --email myemail@example.com --dns ionos --domains my.example.org run Credentials    Environment Variable Name Description     IONOS_API_KEY API key \u0026lt;prefix\u0026gt;.\u0026lt;secret\u0026gt; https://developer.hosting.ionos.com/docs/getstarted    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nAdditional Configuration    Environment Variable Name Description     IONOS_HTTP_TIMEOUT API request timeout   IONOS_POLLING_INTERVAL Time between DNS propagation check   IONOS_PROPAGATION_TIMEOUT Maximum waiting time for DNS propagation   IONOS_TTL The TTL of the TXT record used for the DNS challenge    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nMore information  API documentation  "
},
{
	"uri": "https://go-acme.github.io/lego/dns/joker/",
	"title": "Joker",
	"tags": [],
	"description": "",
	"content": "Since: v2.6.0\nConfiguration for Joker.\n Code: joker  Here is an example bash command using the Joker provider:\n# SVC JOKER_API_MODE=SVC \\ JOKER_USERNAME=\u0026lt;your email\u0026gt; \\ JOKER_PASSWORD=\u0026lt;your password\u0026gt; \\ lego --email myemail@example.com --dns joker --domains my.example.org run # DMAPI JOKER_API_MODE=DMAPI \\ JOKER_USERNAME=\u0026lt;your email\u0026gt; \\ JOKER_PASSWORD=\u0026lt;your password\u0026gt; \\ lego --email myemail@example.com --dns joker --domains my.example.org run ## or JOKER_API_MODE=DMAPI \\ JOKER_API_KEY=\u0026lt;your API key\u0026gt; \\ lego --email myemail@example.com --dns joker --domains my.example.org run Credentials    Environment Variable Name Description     JOKER_API_KEY API key (only with DMAPI mode)   JOKER_API_MODE \u0026lsquo;DMAPI\u0026rsquo; or \u0026lsquo;SVC\u0026rsquo;. DMAPI is for resellers accounts. (Default: DMAPI)   JOKER_PASSWORD Joker.com password   JOKER_USERNAME Joker.com username    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nAdditional Configuration    Environment Variable Name Description     JOKER_HTTP_TIMEOUT API request timeout   JOKER_POLLING_INTERVAL Time between DNS propagation check   JOKER_PROPAGATION_TIMEOUT Maximum waiting time for DNS propagation   JOKER_TTL The TTL of the TXT record used for the DNS challenge    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nMore information  API documentation  "
},
{
	"uri": "https://go-acme.github.io/lego/dns/acme-dns/",
	"title": "Joohoi&#39;s ACME-DNS",
	"tags": [],
	"description": "",
	"content": "Since: v1.1.0\nConfiguration for Joohoi\u0026rsquo;s ACME-DNS.\n Code: acme-dns  Here is an example bash command using the Joohoi\u0026rsquo;s ACME-DNS provider:\nACME_DNS_API_BASE=http://10.0.0.8:4443 \\ ACME_DNS_STORAGE_PATH=/root/.lego-acme-dns-accounts.json \\ lego --email myemail@example.com --dns acme-dns --domains my.example.org run Credentials    Environment Variable Name Description     ACME_DNS_API_BASE The ACME-DNS API address   ACME_DNS_STORAGE_PATH The ACME-DNS JSON account data file. A per-domain account will be registered/persisted to this file and used for TXT updates.    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nMore information  API documentation Go client  "
},
{
	"uri": "https://go-acme.github.io/lego/usage/library/",
	"title": "Library",
	"tags": [],
	"description": "",
	"content": "Lego can be use as a Go Library.\nGoDoc The GoDoc can be found here: GoDoc\nUsage A valid, but bare-bones example use of the acme package:\npackage main import ( \u0026#34;crypto\u0026#34; \u0026#34;crypto/ecdsa\u0026#34; \u0026#34;crypto/elliptic\u0026#34; \u0026#34;crypto/rand\u0026#34; \u0026#34;fmt\u0026#34; \u0026#34;log\u0026#34; \u0026#34;github.com/go-acme/lego/v4/certcrypto\u0026#34; \u0026#34;github.com/go-acme/lego/v4/certificate\u0026#34; \u0026#34;github.com/go-acme/lego/v4/challenge/http01\u0026#34; \u0026#34;github.com/go-acme/lego/v4/challenge/tlsalpn01\u0026#34; \u0026#34;github.com/go-acme/lego/v4/lego\u0026#34; \u0026#34;github.com/go-acme/lego/v4/registration\u0026#34; ) // You\u0026#39;ll need a user or account type that implements acme.User type MyUser struct { Email string Registration *registration.Resource key crypto.PrivateKey } func (u *MyUser) GetEmail() string { return u.Email } func (u MyUser) GetRegistration() *registration.Resource { return u.Registration } func (u *MyUser) GetPrivateKey() crypto.PrivateKey { return u.key } func main() { // Create a user. New accounts need an email and private key to start. \tprivateKey, err := ecdsa.GenerateKey(elliptic.P256(), rand.Reader) if err != nil { log.Fatal(err) } myUser := MyUser{ Email: \u0026#34;you@yours.com\u0026#34;, key: privateKey, } config := lego.NewConfig(\u0026amp;myUser) // This CA URL is configured for a local dev instance of Boulder running in Docker in a VM. \tconfig.CADirURL = \u0026#34;http://192.168.99.100:4000/directory\u0026#34; config.Certificate.KeyType = certcrypto.RSA2048 // A client facilitates communication with the CA server. \tclient, err := lego.NewClient(config) if err != nil { log.Fatal(err) } // We specify an HTTP port of 5002 and an TLS port of 5001 on all interfaces \t// because we aren\u0026#39;t running as root and can\u0026#39;t bind a listener to port 80 and 443 \t// (used later when we attempt to pass challenges). Keep in mind that you still \t// need to proxy challenge traffic to port 5002 and 5001. \terr = client.Challenge.SetHTTP01Provider(http01.NewProviderServer(\u0026#34;\u0026#34;, \u0026#34;5002\u0026#34;)) if err != nil { log.Fatal(err) } err = client.Challenge.SetTLSALPN01Provider(tlsalpn01.NewProviderServer(\u0026#34;\u0026#34;, \u0026#34;5001\u0026#34;)) if err != nil { log.Fatal(err) } // New users will need to register \treg, err := client.Registration.Register(registration.RegisterOptions{TermsOfServiceAgreed: true}) if err != nil { log.Fatal(err) } myUser.Registration = reg request := certificate.ObtainRequest{ Domains: []string{\u0026#34;mydomain.com\u0026#34;}, Bundle: true, } certificates, err := client.Certificate.Obtain(request) if err != nil { log.Fatal(err) } // Each certificate comes back with the cert bytes, the bytes of the client\u0026#39;s \t// private key, and a certificate URL. SAVE THESE TO DISK. \tfmt.Printf(\u0026#34;%#v\\n\u0026#34;, certificates) // ... all done. }"
},
{
	"uri": "https://go-acme.github.io/lego/dns/linode/",
	"title": "Linode (v4)",
	"tags": [],
	"description": "",
	"content": "Since: v1.1.0\nConfiguration for Linode (v4).\n Code: linode  Here is an example bash command using the Linode (v4) provider:\nLINODE_TOKEN=xxxxx \\ lego --email myemail@example.com --dns linode --domains my.example.org run Credentials    Environment Variable Name Description     LINODE_TOKEN API token    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nAdditional Configuration    Environment Variable Name Description     LINODE_HTTP_TIMEOUT API request timeout   LINODE_POLLING_INTERVAL Time between DNS propagation check   LINODE_PROPAGATION_TIMEOUT Maximum waiting time for DNS propagation   LINODE_TTL The TTL of the TXT record used for the DNS challenge    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nMore information  API documentation Go client  "
},
{
	"uri": "https://go-acme.github.io/lego/dns/liquidweb/",
	"title": "Liquid Web",
	"tags": [],
	"description": "",
	"content": "Since: v3.1.0\nConfiguration for Liquid Web.\n Code: liquidweb  Here is an example bash command using the Liquid Web provider:\nLIQUID_WEB_USERNAME=someuser \\ LIQUID_WEB_PASSWORD=somepass \\ LIQUID_ZONE=tacoman.com.net \\ lego --email myemail@example.com --dns liquidweb --domains my.example.org run Credentials    Environment Variable Name Description     LIQUID_WEB_PASSWORD Storm API Password   LIQUID_WEB_USERNAME Storm API Username   LIQUID_WEB_ZONE DNS Zone    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nAdditional Configuration    Environment Variable Name Description     LIQUID_WEB_HTTP_TIMEOUT Maximum waiting time for the DNS records to be created (not verified)   LIQUID_WEB_POLLING_INTERVAL Time between DNS propagation check   LIQUID_WEB_PROPAGATION_TIMEOUT Maximum waiting time for DNS propagation   LIQUID_WEB_TTL The TTL of the TXT record used for the DNS challenge   LIQUID_WEB_URL Storm API endpoint    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nMore information  API documentation Go client  "
},
{
	"uri": "https://go-acme.github.io/lego/dns/loopia/",
	"title": "Loopia",
	"tags": [],
	"description": "",
	"content": "Since: v4.2.0\nConfiguration for Loopia.\n Code: loopia  Here is an example bash command using the Loopia provider:\nLOOPIA_API_USER=xxxxxxxx \\ LOOPIA_API_PASSWORD=yyyyyyyy \\ lego --email my@email.com --dns loopia --domains my.domain.com run Credentials    Environment Variable Name Description     LOOPIA_API_PASSWORD API password   LOOPIA_API_USER API username    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nAdditional Configuration    Environment Variable Name Description     LOOPIA_HTTP_TIMEOUT API request timeout   LOOPIA_POLLING_INTERVAL Time between DNS propagation check   LOOPIA_PROPAGATION_TIMEOUT Maximum waiting time for DNS propagation   LOOPIA_TTL The TTL of the TXT record used for the DNS challenge    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nAPI user You can generate a new API user from your account page.\nIt needs to have the following permissions:\n addZoneRecord getZoneRecords removeZoneRecord removeSubdomain  More information  API documentation  "
},
{
	"uri": "https://go-acme.github.io/lego/dns/luadns/",
	"title": "LuaDNS",
	"tags": [],
	"description": "",
	"content": "Since: v3.7.0\nConfiguration for LuaDNS.\n Code: luadns  Here is an example bash command using the LuaDNS provider:\nLUADNS_API_USERNAME=youremail \\ LUADNS_API_TOKEN=xxxxxxxx \\ lego --email myemail@example.com --dns luadns --domains my.example.org run Credentials    Environment Variable Name Description     LUADNS_API_TOKEN API token   LUADNS_API_USERNAME Username (your email)    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nAdditional Configuration    Environment Variable Name Description     LUADNS_HTTP_TIMEOUT API request timeout   LUADNS_POLLING_INTERVAL Time between DNS propagation check   LUADNS_PROPAGATION_TIMEOUT Maximum waiting time for DNS propagation   LUADNS_SEQUENCE_INTERVAL Interval between iteration   LUADNS_TTL The TTL of the TXT record used for the DNS challenge    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nMore information  API documentation  "
},
{
	"uri": "https://go-acme.github.io/lego/dns/manual/",
	"title": "Manual",
	"tags": [],
	"description": "",
	"content": "Solving the DNS-01 challenge using CLI prompt.\nExample Do you accept the TOS? Y/n [INFO] acme: Registering account for test@test.com !!!! HEADS UP !!!! Your account credentials have been saved in your Let\u0026#39;s Encrypt configuration directory at \u0026#34;~/.lego/accounts\u0026#34;. You should make a secure backup of this folder now. This configuration directory will also contain certificates and private keys obtained from Let\u0026#39;s Encrypt so making regular backups of this folder is ideal. [INFO] [test.com] acme: Obtaining bundled SAN certificate [INFO] [test.com] AuthURL: https://acme-v02.api.letsencrypt.org/acme/authz/lornkZmVYjsh5wLHpxdQcZDPekGf_TYUM-MTJk3-yrA [INFO] [test.com] acme: Could not find solver for: tls-alpn-01 [INFO] [test.com] acme: Could not find solver for: http-01 [INFO] [test.com] acme: use dns-01 solver [INFO] [test.com] acme: Preparing to solve DNS-01 lego: Please create the following TXT record in your test.com. zone: _acme-challenge.test.com. 120 IN TXT \u0026#34;VP-dby1RBuUOnDZg1n9sF-cwicLsognMzJb0Vx8ttAI\u0026#34; lego: Press \u0026#39;Enter\u0026#39; when you are done Do you accept the TOS? Y/n [INFO] acme: Registering account for test@test.com !!!! HEADS UP !!!! Your account credentials have been saved in your Let\u0026#39;s Encrypt configuration directory at \u0026#34;~/.lego/accounts\u0026#34;. You should make a secure backup of this folder now. This configuration directory will also contain certificates and private keys obtained from Let\u0026#39;s Encrypt so making regular backups of this folder is ideal. [INFO] [test.com] acme: Obtaining bundled SAN certificate [INFO] [test.com] AuthURL: https://acme-v02.api.letsencrypt.org/acme/authz/lornkZmVYjsh5wLHpxdQcZDPekGf_TYUM-MTJk3-yrA [INFO] [test.com] acme: Could not find solver for: tls-alpn-01 [INFO] [test.com] acme: Could not find solver for: http-01 [INFO] [test.com] acme: use dns-01 solver [INFO] [test.com] acme: Preparing to solve DNS-01 lego: Please create the following TXT record in your test.com. zone: _acme-challenge.test.com. 120 IN TXT \u0026#34;VP-dby1RBuUOnDZg1n9sF-cwicLsognMzJb0Vx8ttAI\u0026#34; lego: Press \u0026#39;Enter\u0026#39; when you are done"
},
{
	"uri": "https://go-acme.github.io/lego/dns/mydnsjp/",
	"title": "MyDNS.jp",
	"tags": [],
	"description": "",
	"content": "Since: v1.2.0\nConfiguration for MyDNS.jp.\n Code: mydnsjp  Here is an example bash command using the MyDNS.jp provider:\nMYDNSJP_MASTER_ID=xxxxx \\ MYDNSJP_PASSWORD=xxxxx \\ lego --email myemail@example.com --dns mydnsjp --domains my.example.org run Credentials    Environment Variable Name Description     MYDNSJP_MASTER_ID Master ID   MYDNSJP_PASSWORD Password    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nAdditional Configuration    Environment Variable Name Description     MYDNSJP_HTTP_TIMEOUT API request timeout   MYDNSJP_POLLING_INTERVAL Time between DNS propagation check   MYDNSJP_PROPAGATION_TIMEOUT Maximum waiting time for DNS propagation   MYDNSJP_TTL The TTL of the TXT record used for the DNS challenge    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nMore information  API documentation  "
},
{
	"uri": "https://go-acme.github.io/lego/dns/mythicbeasts/",
	"title": "MythicBeasts",
	"tags": [],
	"description": "",
	"content": "Since: v0.3.7\nConfiguration for MythicBeasts.\n Code: mythicbeasts  Here is an example bash command using the MythicBeasts provider:\nMYTHICBEASTS_USER_NAME=myuser \\ MYTHICBEASTS_PASSWORD=mypass \\ lego --email myemail@example.com --dns mythicbeasts --domains my.example.org run Credentials    Environment Variable Name Description     MYTHICBEASTS_PASSWORD Password   MYTHICBEASTS_USERNAME User name    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nAdditional Configuration    Environment Variable Name Description     MYTHICBEASTS_API_ENDPOINT The endpoint for the API (must implement v2)   MYTHICBEASTS_HTTP_TIMEOUT API request timeout   MYTHICBEASTS_POLLING_INTERVAL Time between DNS propagation check   MYTHICBEASTS_PROPAGATION_TIMEOUT Maximum waiting time for DNS propagation   MYTHICBEASTS_TTL The TTL of the TXT record used for the DNS challenge   MYTHICBEASYS_AUTH_API_ENDPOINT The endpoint for Mythic Beasts\u0026rsquo; Authentication    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nIf you are using specific API keys, then the username is the API ID for your API key, and the password is the API secret.\nYour API key name is not needed to operate lego.\nMore information  API documentation  "
},
{
	"uri": "https://go-acme.github.io/lego/dns/nifcloud/",
	"title": "NIFCloud",
	"tags": [],
	"description": "",
	"content": "Since: v1.1.0\nConfiguration for NIFCloud.\n Code: nifcloud  Here is an example bash command using the NIFCloud provider:\nNIFCLOUD_ACCESS_KEY_ID=xxxx \\ NIFCLOUD_SECRET_ACCESS_KEY=yyyy \\ lego --email myemail@example.com --dns nifcloud --domains my.example.org run Credentials    Environment Variable Name Description     NIFCLOUD_ACCESS_KEY_ID Access key   NIFCLOUD_SECRET_ACCESS_KEY Secret access key    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nAdditional Configuration    Environment Variable Name Description     NIFCLOUD_HTTP_TIMEOUT API request timeout   NIFCLOUD_POLLING_INTERVAL Time between DNS propagation check   NIFCLOUD_PROPAGATION_TIMEOUT Maximum waiting time for DNS propagation   NIFCLOUD_TTL The TTL of the TXT record used for the DNS challenge    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nMore information  API documentation  "
},
{
	"uri": "https://go-acme.github.io/lego/dns/ns1/",
	"title": "NS1",
	"tags": [],
	"description": "",
	"content": "Since: v0.4.0\nConfiguration for NS1.\n Code: ns1  Here is an example bash command using the NS1 provider:\nNS1_API_KEY=xxxx \\ lego --email myemail@example.com --dns ns1 --domains my.example.org run Credentials    Environment Variable Name Description     NS1_API_KEY API key    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nAdditional Configuration    Environment Variable Name Description     NS1_HTTP_TIMEOUT API request timeout   NS1_POLLING_INTERVAL Time between DNS propagation check   NS1_PROPAGATION_TIMEOUT Maximum waiting time for DNS propagation   NS1_TTL The TTL of the TXT record used for the DNS challenge    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nMore information  API documentation Go client  "
},
{
	"uri": "https://go-acme.github.io/lego/dns/namedotcom/",
	"title": "Name.com",
	"tags": [],
	"description": "",
	"content": "Since: v0.5.0\nConfiguration for Name.com.\n Code: namedotcom  Here is an example bash command using the Name.com provider:\nNAMECOM_USERNAME=foo.bar \\ NAMECOM_API_TOKEN=a379a6f6eeafb9a55e378c118034e2751e682fab \\ lego --email myemail@example.com --dns namedotcom --domains my.example.org run Credentials    Environment Variable Name Description     NAMECOM_API_TOKEN API token   NAMECOM_USERNAME Username    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nAdditional Configuration    Environment Variable Name Description     NAMECOM_HTTP_TIMEOUT API request timeout   NAMECOM_POLLING_INTERVAL Time between DNS propagation check   NAMECOM_PROPAGATION_TIMEOUT Maximum waiting time for DNS propagation   NAMECOM_TTL The TTL of the TXT record used for the DNS challenge    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nMore information  API documentation Go client  "
},
{
	"uri": "https://go-acme.github.io/lego/dns/namecheap/",
	"title": "Namecheap",
	"tags": [],
	"description": "",
	"content": "Since: v0.3.0\nConfiguration for Namecheap.\nTo enable API access on the Namecheap production environment, some opaque requirements must be met. More information in the section Enabling API Access of the Namecheap documentation. (2020-08: Account balance of $50+, 20+ domains in your account, or purchases totaling $50+ within the last 2 years.)\n Code: namecheap  Here is an example bash command using the Namecheap provider:\nNAMECHEAP_API_USER=user \\ NAMECHEAP_API_KEY=key \\ lego --email myemail@example.com --dns namecheap --domains my.example.org run Credentials    Environment Variable Name Description     NAMECHEAP_API_KEY API key   NAMECHEAP_API_USER API user    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nAdditional Configuration    Environment Variable Name Description     NAMECHEAP_HTTP_TIMEOUT API request timeout   NAMECHEAP_POLLING_INTERVAL Time between DNS propagation check   NAMECHEAP_PROPAGATION_TIMEOUT Maximum waiting time for DNS propagation   NAMECHEAP_SANDBOX Activate the sandbox (boolean)   NAMECHEAP_TTL The TTL of the TXT record used for the DNS challenge    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nMore information  API documentation  "
},
{
	"uri": "https://go-acme.github.io/lego/dns/namesilo/",
	"title": "Namesilo",
	"tags": [],
	"description": "",
	"content": "Since: v2.7.0\nConfiguration for Namesilo.\n Code: namesilo  Here is an example bash command using the Namesilo provider:\nNAMESILO_API_KEY=b9841238feb177a84330febba8a83208921177bffe733 \\ lego --email myemail@example.com --dns namesilo --domains my.example.org run Credentials    Environment Variable Name Description     NAMESILO_API_KEY Client ID    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nAdditional Configuration    Environment Variable Name Description     NAMESILO_POLLING_INTERVAL Time between DNS propagation check   NAMESILO_PROPAGATION_TIMEOUT Maximum waiting time for DNS propagation, it is better to set larger than 15m   NAMESILO_TTL The TTL of the TXT record used for the DNS challenge, should be in [3600, 2592000]    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nMore information  API documentation Go client  "
},
{
	"uri": "https://go-acme.github.io/lego/dns/netcup/",
	"title": "Netcup",
	"tags": [],
	"description": "",
	"content": "Since: v1.1.0\nConfiguration for Netcup.\n Code: netcup  Here is an example bash command using the Netcup provider:\nNETCUP_CUSTOMER_NUMBER=xxxx \\ NETCUP_API_KEY=yyyy \\ NETCUP_API_PASSWORD=zzzz \\ lego --email myemail@example.com --dns netcup --domains my.example.org run Credentials    Environment Variable Name Description     NETCUP_API_KEY API key   NETCUP_API_PASSWORD API password   NETCUP_CUSTOMER_NUMBER Customer number    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nAdditional Configuration    Environment Variable Name Description     NETCUP_HTTP_TIMEOUT API request timeout   NETCUP_POLLING_INTERVAL Time between DNS propagation check   NETCUP_PROPAGATION_TIMEOUT Maximum waiting time for DNS propagation   NETCUP_TTL The TTL of the TXT record used for the DNS challenge    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nMore information  API documentation  "
},
{
	"uri": "https://go-acme.github.io/lego/dns/netlify/",
	"title": "Netlify",
	"tags": [],
	"description": "",
	"content": "Since: v3.7.0\nConfiguration for Netlify.\n Code: netlify  Here is an example bash command using the Netlify provider:\nNETLIFY_TOKEN=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx \\ lego --email myemail@example.com --dns netlify --domains my.example.org run Credentials    Environment Variable Name Description     NETLIFY_TOKEN Token    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nAdditional Configuration    Environment Variable Name Description     NETLIFY_HTTP_TIMEOUT API request timeout   NETLIFY_POLLING_INTERVAL Time between DNS propagation check   NETLIFY_PROPAGATION_TIMEOUT Maximum waiting time for DNS propagation   NETLIFY_TTL The TTL of the TXT record used for the DNS challenge    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nMore information  API documentation  "
},
{
	"uri": "https://go-acme.github.io/lego/dns/ovh/",
	"title": "OVH",
	"tags": [],
	"description": "",
	"content": "Since: v0.4.0\nConfiguration for OVH.\n Code: ovh  Here is an example bash command using the OVH provider:\nOVH_APPLICATION_KEY=1234567898765432 \\ OVH_APPLICATION_SECRET=b9841238feb177a84330febba8a832089 \\ OVH_CONSUMER_KEY=256vfsd347245sdfg \\ OVH_ENDPOINT=ovh-eu \\ lego --email myemail@example.com --dns autodns --domains my.example.org run Credentials    Environment Variable Name Description     OVH_APPLICATION_KEY Application key   OVH_APPLICATION_SECRET Application secret   OVH_CONSUMER_KEY Consumer key   OVH_ENDPOINT Endpoint URL (ovh-eu or ovh-ca)    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nAdditional Configuration    Environment Variable Name Description     OVH_HTTP_TIMEOUT API request timeout   OVH_POLLING_INTERVAL Time between DNS propagation check   OVH_PROPAGATION_TIMEOUT Maximum waiting time for DNS propagation   OVH_TTL The TTL of the TXT record used for the DNS challenge    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nApplication Key and Secret Application key and secret can be created by following the OVH guide.\nWhen requesting the consumer key, the following configuration can be use to define access rights:\n{ \u0026#34;accessRules\u0026#34;: [ { \u0026#34;method\u0026#34;: \u0026#34;POST\u0026#34;, \u0026#34;path\u0026#34;: \u0026#34;/domain/zone/*\u0026#34; }, { \u0026#34;method\u0026#34;: \u0026#34;DELETE\u0026#34;, \u0026#34;path\u0026#34;: \u0026#34;/domain/zone/*\u0026#34; } ] } More information  API documentation Go client  "
},
{
	"uri": "https://go-acme.github.io/lego/dns/otc/",
	"title": "Open Telekom Cloud",
	"tags": [],
	"description": "",
	"content": "Since: v0.4.1\nConfiguration for Open Telekom Cloud.\n Code: otc  Please contribute by adding a CLI example.\n Credentials    Environment Variable Name Description     OTC_DOMAIN_NAME Domain name   OTC_IDENTITY_ENDPOINT Identity endpoint URL   OTC_PASSWORD Password   OTC_PROJECT_NAME Project name   OTC_USER_NAME User name    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nAdditional Configuration    Environment Variable Name Description     OTC_HTTP_TIMEOUT API request timeout   OTC_POLLING_INTERVAL Time between DNS propagation check   OTC_PROPAGATION_TIMEOUT Maximum waiting time for DNS propagation   OTC_TTL The TTL of the TXT record used for the DNS challenge    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nMore information  API documentation  "
},
{
	"uri": "https://go-acme.github.io/lego/dns/oraclecloud/",
	"title": "Oracle Cloud",
	"tags": [],
	"description": "",
	"content": "Since: v2.3.0\nConfiguration for Oracle Cloud.\n Code: oraclecloud  Here is an example bash command using the Oracle Cloud provider:\nOCI_PRIVKEY_FILE=\u0026#34;~/.oci/oci_api_key.pem\u0026#34; \\ OCI_PRIVKEY_PASS=\u0026#34;secret\u0026#34; \\ OCI_TENANCY_OCID=\u0026#34;ocid1.tenancy.oc1..secret\u0026#34; \\ OCI_USER_OCID=\u0026#34;ocid1.user.oc1..secret\u0026#34; \\ OCI_PUBKEY_FINGERPRINT=\u0026#34;00:00:00:00:00:00:00:00:00:00:00:00:00:00:00:00\u0026#34; \\ OCI_REGION=\u0026#34;us-phoenix-1\u0026#34; \\ OCI_COMPARTMENT_OCID=\u0026#34;ocid1.tenancy.oc1..secret\u0026#34; \\ lego --email myemail@example.com --dns oraclecloud --domains my.example.org run Credentials    Environment Variable Name Description     OCI_COMPARTMENT_OCID Compartment OCID   OCI_PRIVKEY_FILE Private key file   OCI_PRIVKEY_PASS Private key password   OCI_PUBKEY_FINGERPRINT Public key fingerprint   OCI_REGION Region   OCI_TENANCY_OCID Tenancy OCID   OCI_USER_OCID User OCID    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nAdditional Configuration    Environment Variable Name Description     OCI_POLLING_INTERVAL Time between DNS propagation check   OCI_PROPAGATION_TIMEOUT Maximum waiting time for DNS propagation   OCI_TTL The TTL of the TXT record used for the DNS challenge    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nMore information  API documentation Go client  "
},
{
	"uri": "https://go-acme.github.io/lego/dns/pdns/",
	"title": "PowerDNS",
	"tags": [],
	"description": "",
	"content": "Since: v0.4.0\nConfiguration for PowerDNS.\n Code: pdns  Here is an example bash command using the PowerDNS provider:\nPDNS_API_URL=http://pdns-server:80/ \\ PDNS_API_KEY=xxxx \\ lego --email myemail@example.com --dns pdns --domains my.example.org run Credentials    Environment Variable Name Description     PDNS_API_KEY API key   PDNS_API_URL API URL    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nAdditional Configuration    Environment Variable Name Description     PDNS_HTTP_TIMEOUT API request timeout   PDNS_POLLING_INTERVAL Time between DNS propagation check   PDNS_PROPAGATION_TIMEOUT Maximum waiting time for DNS propagation   PDNS_TTL The TTL of the TXT record used for the DNS challenge    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nInformation Tested and confirmed to work with PowerDNS authoritative server 3.4.8 and 4.0.1. Refer to PowerDNS documentation instructions on how to enable the built-in API interface.\nPowerDNS Notes: - PowerDNS API does not currently support SSL, therefore you should take care to ensure that traffic between lego and the PowerDNS API is over a trusted network, VPN etc. - In order to have the SOA serial automatically increment each time the _acme-challenge record is added/modified via the API, set SOA-EDIT-API to INCEPTION-INCREMENT for the zone in the domainmetadata table\nMore information  API documentation  "
},
{
	"uri": "https://go-acme.github.io/lego/dns/rfc2136/",
	"title": "RFC2136",
	"tags": [],
	"description": "",
	"content": "Since: v0.3.0\nConfiguration for RFC2136.\n Code: rfc2136  Here is an example bash command using the RFC2136 provider:\nRFC2136_NAMESERVER=127.0.0.1 \\ RFC2136_TSIG_KEY=lego \\ RFC2136_TSIG_ALGORITHM=hmac-sha256. \\ RFC2136_TSIG_SECRET=YWJjZGVmZGdoaWprbG1ub3BxcnN0dXZ3eHl6MTIzNDU= \\ lego --email myemail@example.com --dns rfc2136 --domains my.example.org run ## --- keyname=lego; keyfile=lego.key; tsig-keygen $keyname \u0026gt; $keyfile RFC2136_NAMESERVER=127.0.0.1 \\ RFC2136_TSIG_KEY=\u0026#34;$keyname\u0026#34; \\ RFC2136_TSIG_ALGORITHM=\u0026#34;$( awk -F\u0026#39;[ \u0026#34;;]\u0026#39; \u0026#39;/algorithm/ { print $2 }\u0026#39; $keyfile ).\u0026#34; \\ RFC2136_TSIG_SECRET=\u0026#34;$( awk -F\u0026#39;[ \u0026#34;;]\u0026#39; \u0026#39;/secret/ { print $3 }\u0026#39; $keyfile )\u0026#34; \\ lego --email myemail@example.com --dns rfc2136 --domains my.example.org run Credentials    Environment Variable Name Description     RFC2136_NAMESERVER Network address in the form \u0026ldquo;host\u0026rdquo; or \u0026ldquo;host:port\u0026rdquo;   RFC2136_TSIG_ALGORITHM TSIG algorithm. See miekg/dns#tsig.go for supported values. To disable TSIG authentication, leave the RFC2136_TSIG* variables unset.   RFC2136_TSIG_KEY Name of the secret key as defined in DNS server configuration. To disable TSIG authentication, leave the RFC2136_TSIG* variables unset.   RFC2136_TSIG_SECRET Secret key payload. To disable TSIG authentication, leave theRFC2136_TSIG* variables unset.    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nAdditional Configuration    Environment Variable Name Description     RFC2136_DNS_TIMEOUT API request timeout   RFC2136_POLLING_INTERVAL Time between DNS propagation check   RFC2136_PROPAGATION_TIMEOUT Maximum waiting time for DNS propagation   RFC2136_SEQUENCE_INTERVAL Interval between iteration   RFC2136_TTL The TTL of the TXT record used for the DNS challenge    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nMore information  API documentation  "
},
{
	"uri": "https://go-acme.github.io/lego/dns/rackspace/",
	"title": "Rackspace",
	"tags": [],
	"description": "",
	"content": "Since: v0.4.0\nConfiguration for Rackspace.\n Code: rackspace  Here is an example bash command using the Rackspace provider:\nRACKSPACE_USER=xxxx \\ RACKSPACE_API_KEY=yyyy \\ lego --email myemail@example.com --dns rackspace --domains my.example.org run Credentials    Environment Variable Name Description     RACKSPACE_API_KEY API key   RACKSPACE_USER API user    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nAdditional Configuration    Environment Variable Name Description     RACKSPACE_HTTP_TIMEOUT API request timeout   RACKSPACE_POLLING_INTERVAL Time between DNS propagation check   RACKSPACE_PROPAGATION_TIMEOUT Maximum waiting time for DNS propagation   RACKSPACE_TTL The TTL of the TXT record used for the DNS challenge    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nMore information  API documentation  "
},
{
	"uri": "https://go-acme.github.io/lego/dns/rimuhosting/",
	"title": "RimuHosting",
	"tags": [],
	"description": "",
	"content": "Since: v0.3.5\nConfiguration for RimuHosting.\n Code: rimuhosting  Here is an example bash command using the RimuHosting provider:\nRIMUHOSTING_API_KEY=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx \\ lego --email myemail@example.com --dns rimuhosting --domains my.example.org run Credentials    Environment Variable Name Description     RIMUHOSTING_API_KEY User API key    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nAdditional Configuration    Environment Variable Name Description     RIMUHOSTING_HTTP_TIMEOUT API request timeout   RIMUHOSTING_POLLING_INTERVAL Time between DNS propagation check   RIMUHOSTING_PROPAGATION_TIMEOUT Maximum waiting time for DNS propagation   RIMUHOSTING_TTL The TTL of the TXT record used for the DNS challenge    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nMore information  API documentation  "
},
{
	"uri": "https://go-acme.github.io/lego/dns/sakuracloud/",
	"title": "Sakura Cloud",
	"tags": [],
	"description": "",
	"content": "Since: v1.1.0\nConfiguration for Sakura Cloud.\n Code: sakuracloud  Here is an example bash command using the Sakura Cloud provider:\nSAKURACLOUD_ACCESS_TOKEN=xxxxx \\ SAKURACLOUD_ACCESS_TOKEN_SECRET=yyyyy \\ lego --email myemail@example.com --dns sakuracloud --domains my.example.org run Credentials    Environment Variable Name Description     SAKURACLOUD_ACCESS_TOKEN Access token   SAKURACLOUD_ACCESS_TOKEN_SECRET Access token secret    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nAdditional Configuration    Environment Variable Name Description     SAKURACLOUD_HTTP_TIMEOUT API request timeout   SAKURACLOUD_POLLING_INTERVAL Time between DNS propagation check   SAKURACLOUD_PROPAGATION_TIMEOUT Maximum waiting time for DNS propagation   SAKURACLOUD_TTL The TTL of the TXT record used for the DNS challenge    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nMore information  API documentation Go client  "
},
{
	"uri": "https://go-acme.github.io/lego/dns/scaleway/",
	"title": "Scaleway",
	"tags": [],
	"description": "",
	"content": "Since: v3.4.0\nConfiguration for Scaleway.\n Code: scaleway  Here is an example bash command using the Scaleway provider:\nSCALEWAY_API_TOKEN=xxxxxxx-xxxxx-xxxx-xxx-xxxxxx \\ lego --email myemail@example.com --dns scaleway --domains my.example.org run Credentials    Environment Variable Name Description     SCALEWAY_API_TOKEN API token    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nAdditional Configuration    Environment Variable Name Description     SCALEWAY_API_VERSION API version   SCALEWAY_BASE_URL API endpoint URL   SCALEWAY_HTTP_TIMEOUT API request timeout   SCALEWAY_POLLING_INTERVAL Time between DNS propagation check   SCALEWAY_PROPAGATION_TIMEOUT Maximum waiting time for DNS propagation   SCALEWAY_TTL The TTL of the TXT record used for the DNS challenge    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nMore information  API documentation  "
},
{
	"uri": "https://go-acme.github.io/lego/dns/selectel/",
	"title": "Selectel",
	"tags": [],
	"description": "",
	"content": "Since: v1.2.0\nConfiguration for Selectel.\n Code: selectel  Here is an example bash command using the Selectel provider:\nSELECTEL_API_TOKEN=xxxxx \\ lego --email myemail@example.com --dns selectel --domains my.example.org run Credentials    Environment Variable Name Description     SELECTEL_API_TOKEN API token    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nAdditional Configuration    Environment Variable Name Description     SELECTEL_BASE_URL API endpoint URL   SELECTEL_HTTP_TIMEOUT API request timeout   SELECTEL_POLLING_INTERVAL Time between DNS propagation check   SELECTEL_PROPAGATION_TIMEOUT Maximum waiting time for DNS propagation   SELECTEL_TTL The TTL of the TXT record used for the DNS challenge    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nMore information  API documentation  "
},
{
	"uri": "https://go-acme.github.io/lego/dns/servercow/",
	"title": "Servercow",
	"tags": [],
	"description": "",
	"content": "Since: v3.4.0\nConfiguration for Servercow.\n Code: servercow  Here is an example bash command using the Servercow provider:\nSERVERCOW_USERNAME=xxxxxxxx \\ SERVERCOW_PASSWORD=xxxxxxxx \\ lego --email myemail@example.com --dns servercow --domains my.example.org run Credentials    Environment Variable Name Description     SERVERCOW_PASSWORD API password   SERVERCOW_USERNAME API username    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nAdditional Configuration    Environment Variable Name Description     SERVERCOW_HTTP_TIMEOUT API request timeout   SERVERCOW_POLLING_INTERVAL Time between DNS propagation check   SERVERCOW_PROPAGATION_TIMEOUT Maximum waiting time for DNS propagation   SERVERCOW_TTL The TTL of the TXT record used for the DNS challenge    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nMore information  API documentation  "
},
{
	"uri": "https://go-acme.github.io/lego/dns/stackpath/",
	"title": "Stackpath",
	"tags": [],
	"description": "",
	"content": "Since: v1.1.0\nConfiguration for Stackpath.\n Code: stackpath  Here is an example bash command using the Stackpath provider:\nSTACKPATH_CLIENT_ID=xxxxx \\ STACKPATH_CLIENT_SECRET=yyyyy \\ STACKPATH_STACK_ID=zzzzz \\ lego --email myemail@example.com --dns stackpath --domains my.example.org run Credentials    Environment Variable Name Description     STACKPATH_CLIENT_ID Client ID   STACKPATH_CLIENT_SECRET Client secret   STACKPATH_STACK_ID Stack ID    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nAdditional Configuration    Environment Variable Name Description     STACKPATH_POLLING_INTERVAL Time between DNS propagation check   STACKPATH_PROPAGATION_TIMEOUT Maximum waiting time for DNS propagation   STACKPATH_TTL The TTL of the TXT record used for the DNS challenge    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nMore information  API documentation  "
},
{
	"uri": "https://go-acme.github.io/lego/dns/transip/",
	"title": "TransIP",
	"tags": [],
	"description": "",
	"content": "Since: v2.0.0\nConfiguration for TransIP.\n Code: transip  Here is an example bash command using the TransIP provider:\nTRANSIP_ACCOUNT_NAME = \u0026#34;Account name\u0026#34; \\ TRANSIP_PRIVATE_KEY_PATH = \u0026#34;transip.key\u0026#34; \\ lego --email myemail@example.com --dns transip --domains my.example.org run Credentials    Environment Variable Name Description     TRANSIP_ACCOUNT_NAME Account name   TRANSIP_PRIVATE_KEY_PATH Private key path    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nAdditional Configuration    Environment Variable Name Description     TRANSIP_POLLING_INTERVAL Time between DNS propagation check   TRANSIP_PROPAGATION_TIMEOUT Maximum waiting time for DNS propagation   TRANSIP_TTL The TTL of the TXT record used for the DNS challenge    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nMore information  API documentation Go client  "
},
{
	"uri": "https://go-acme.github.io/lego/dns/vegadns/",
	"title": "VegaDNS",
	"tags": [],
	"description": "",
	"content": "Since: v1.1.0\nConfiguration for VegaDNS.\n Code: vegadns  Please contribute by adding a CLI example.\n Credentials    Environment Variable Name Description     SECRET_VEGADNS_KEY API key   SECRET_VEGADNS_SECRET API secret   VEGADNS_URL API endpoint URL    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nAdditional Configuration    Environment Variable Name Description     VEGADNS_POLLING_INTERVAL Time between DNS propagation check   VEGADNS_PROPAGATION_TIMEOUT Maximum waiting time for DNS propagation   VEGADNS_TTL The TTL of the TXT record used for the DNS challenge    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nMore information  API documentation Go client  "
},
{
	"uri": "https://go-acme.github.io/lego/dns/versio/",
	"title": "Versio.[nl|eu|uk]",
	"tags": [],
	"description": "",
	"content": "Since: v2.7.0\nConfiguration for Versio.[nl|eu|uk].\n Code: versio  Here is an example bash command using the Versio.[nl|eu|uk] provider:\nVERSIO_USERNAME=\u0026lt;your login\u0026gt; \\ VERSIO_PASSWORD=\u0026lt;your password\u0026gt; \\ lego --email myemail@example.com --dns versio --domains my.example.org run Credentials    Environment Variable Name Description     VERSIO_PASSWORD Basic authentication password   VERSIO_USERNAME Basic authentication username    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nAdditional Configuration    Environment Variable Name Description     VERSIO_ENDPOINT The endpoint URL of the API Server   VERSIO_HTTP_TIMEOUT API request timeout   VERSIO_POLLING_INTERVAL Time between DNS propagation check   VERSIO_PROPAGATION_TIMEOUT Maximum waiting time for DNS propagation   VERSIO_SEQUENCE_INTERVAL Interval between iteration, default 60s   VERSIO_TTL The TTL of the TXT record used for the DNS challenge    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nTo test with the sandbox environment set VERSIO_ENDPOINT=https://www.versio.nl/testapi/v1/\nMore information  API documentation  "
},
{
	"uri": "https://go-acme.github.io/lego/dns/vscale/",
	"title": "Vscale",
	"tags": [],
	"description": "",
	"content": "Since: v2.0.0\nConfiguration for Vscale.\n Code: vscale  Here is an example bash command using the Vscale provider:\nVSCALE_API_TOKEN=xxxxx \\ lego --email myemail@example.com --dns vscale --domains my.example.org run Credentials    Environment Variable Name Description     VSCALE_API_TOKEN API token    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nAdditional Configuration    Environment Variable Name Description     VSCALE_BASE_URL API endpoint URL   VSCALE_HTTP_TIMEOUT API request timeout   VSCALE_POLLING_INTERVAL Time between DNS propagation check   VSCALE_PROPAGATION_TIMEOUT Maximum waiting time for DNS propagation   VSCALE_TTL The TTL of the TXT record used for the DNS challenge    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nMore information  API documentation  "
},
{
	"uri": "https://go-acme.github.io/lego/dns/vultr/",
	"title": "Vultr",
	"tags": [],
	"description": "",
	"content": "Since: v0.3.1\nConfiguration for Vultr.\n Code: vultr  Here is an example bash command using the Vultr provider:\nVULTR_API_KEY=xxxxx \\ lego --email myemail@example.com --dns vultr --domains my.example.org run Credentials    Environment Variable Name Description     VULTR_API_KEY API key    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nAdditional Configuration    Environment Variable Name Description     VULTR_HTTP_TIMEOUT API request timeout   VULTR_POLLING_INTERVAL Time between DNS propagation check   VULTR_PROPAGATION_TIMEOUT Maximum waiting time for DNS propagation   VULTR_TTL The TTL of the TXT record used for the DNS challenge    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nMore information  API documentation Go client  "
},
{
	"uri": "https://go-acme.github.io/lego/",
	"title": "Welcome",
	"tags": [],
	"description": "",
	"content": " Lego Let\u0026rsquo;s Encrypt client and ACME library written in Go.\nFeatures  Register with CA Obtain certificates, both from scratch or with an existing CSR Renew certificates Revoke certificates Robust implementation of all ACME challenges  HTTP (http-01) DNS (dns-01) TLS (tls-alpn-01)  SAN certificate support Comes with multiple optional DNS providers Custom challenge solvers Certificate bundling OCSP helper function  lego introduced support for ACME v2 in v1.0.0.\nIf you still need to utilize ACME v1, you can do so by using the v0.5.0 version.\n"
},
{
	"uri": "https://go-acme.github.io/lego/usage/library/writing-a-challenge-solver/",
	"title": "Writing a Challenge Solver",
	"tags": [],
	"description": "",
	"content": "Lego can solve multiple ACME challenge types out of the box, but sometimes you have custom requirements.\nFor example, you may want to write a solver for the DNS-01 challenge that works with a different DNS provider (lego already supports CloudFlare, AWS, DigitalOcean, and others).\nThe DNS-01 challenge is advantageous when other challenge types are impossible. For example, the HTTP-01 challenge doesn\u0026rsquo;t work well behind a load balancer or CDN and the TLS-ALPN-01 challenge breaks behind TLS termination.\nBut even if using HTTP-01 or TLS-ALPN-01 challenges, you may have specific needs that lego does not consider by default.\nYou can write something called a challenge.Provider that implements this interface:\ntype Provider interface { Present(domain, token, keyAuth string) error CleanUp(domain, token, keyAuth string) error } This provides the means to solve a challenge. First you present a token to the ACME server in a way defined by the challenge type you\u0026rsquo;re solving for, then you \u0026ldquo;clean up\u0026rdquo; after the challenge finishes.\nWriting a challenge.Provider Pretend we want to write our own DNS-01 challenge provider (other challenge types have different requirements but the same principles apply).\nThis will let us prove ownership of domain names parked at a new, imaginary DNS service called BestDNS without having to start our own HTTP server. BestDNS has an API that, given an authentication token, allows us to manipulate DNS records.\nThis simplistic example has only one field to store the auth token, but in reality you may need to keep more state.\ntype DNSProviderBestDNS struct { apiAuthToken string } We should provide a constructor that returns a pointer to the struct. This is important in case we need to maintain state in the struct.\nfunc NewDNSProviderBestDNS(apiAuthToken string) (*DNSProviderBestDNS, error) { return \u0026amp;DNSProviderBestDNS{apiAuthToken: apiAuthToken}, nil } Now we need to implement the interface. We\u0026rsquo;ll start with the Present method. You\u0026rsquo;ll be passed the domain name for which you\u0026rsquo;re proving ownership, a token, and a keyAuth string. How your provider uses token and keyAuth, or if you even use them at all, depends on the challenge type. For DNS-01, we\u0026rsquo;ll just use domain and keyAuth.\nfunc (d *DNSProviderBestDNS) Present(domain, token, keyAuth string) error { fqdn, value := dns01.GetRecord(domain, keyAuth) // make API request to set a TXT record on fqdn with value and TTL  return nil } After calling dns01.GetRecord(domain, keyAuth), we now have the information we need to make our API request and set the TXT record: - fqdn is the fully qualified domain name on which to set the TXT record. - value is the record\u0026rsquo;s value to set on the record.\nSo then you make an API request to the DNS service according to their docs. Once the TXT record is set on the domain, you may return and the challenge will proceed.\nThe ACME server will then verify that you did what it required you to do, and once it is finished, lego will call your CleanUp method. In our case, we want to remove the TXT record we just created.\nfunc (d *DNSProviderBestDNS) CleanUp(domain, token, keyAuth string) error { // clean up any state you created in Present, like removing the TXT record } In our case, we\u0026rsquo;d just make another API request to have the DNS record deleted; no need to keep it and clutter the zone file.\nUsing your new challenge.Provider To use your new challenge provider, call client.Challenge.SetDNS01Provider to tell lego, \u0026ldquo;For this challenge, use this provider\u0026rdquo;. In our case:\nbestDNS, err := NewDNSProviderBestDNS(\u0026#34;my-auth-token\u0026#34;) if err != nil { return err } client.Challenge.SetDNS01Provider(bestDNS) Then, when this client tries to solve the DNS-01 challenge, it will use our new provider, which sets TXT records on a domain name hosted by BestDNS.\nThat\u0026rsquo;s really all there is to it. Go make awesome things!\n"
},
{
	"uri": "https://go-acme.github.io/lego/dns/yandex/",
	"title": "Yandex",
	"tags": [],
	"description": "",
	"content": "Since: v3.7.0\nConfiguration for Yandex.\n Code: yandex  Here is an example bash command using the Yandex provider:\nYANDEX_PDD_TOKEN=\u0026lt;your PDD Token\u0026gt; \\ lego --email myemail@example.com --dns yandex --domains my.example.org run Credentials    Environment Variable Name Description     YANDEX_PDD_TOKEN Basic authentication username    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nAdditional Configuration    Environment Variable Name Description     YANDEX_HTTP_TIMEOUT API request timeout   YANDEX_POLLING_INTERVAL Time between DNS propagation check   YANDEX_PROPAGATION_TIMEOUT Maximum waiting time for DNS propagation   YANDEX_SEQUENCE_INTERVAL Interval between iteration, default 60s   YANDEX_TTL The TTL of the TXT record used for the DNS challenge    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nMore information  API documentation  "
},
{
	"uri": "https://go-acme.github.io/lego/dns/zoneee/",
	"title": "Zone.ee",
	"tags": [],
	"description": "",
	"content": "Since: v2.1.0\nConfiguration for Zone.ee.\n Code: zoneee  Here is an example bash command using the Zone.ee provider:\nZONEEE_API_USER=xxxxx \\ ZONEEE_API_KEY=yyyyy \\ lego --email myemail@example.com --dns zoneee --domains my.example.org run Credentials    Environment Variable Name Description     ZONEEE_API_KEY API key   ZONEEE_API_USER API user    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nAdditional Configuration    Environment Variable Name Description     ZONEEE_ENDPOINT API endpoint URL   ZONEEE_HTTP_TIMEOUT API request timeout   ZONEEE_POLLING_INTERVAL Time between DNS propagation check   ZONEEE_PROPAGATION_TIMEOUT Maximum waiting time for DNS propagation   ZONEEE_TTL The TTL of the TXT record used for the DNS challenge    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nMore information  API documentation  "
},
{
	"uri": "https://go-acme.github.io/lego/dns/zonomi/",
	"title": "Zonomi",
	"tags": [],
	"description": "",
	"content": "Since: v3.5.0\nConfiguration for Zonomi.\n Code: zonomi  Here is an example bash command using the Zonomi provider:\nZONOMI_API_KEY=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx \\ lego --email myemail@example.com --dns zonomi --domains my.example.org run Credentials    Environment Variable Name Description     ZONOMI_API_KEY User API key    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nAdditional Configuration    Environment Variable Name Description     ZONOMI_HTTP_TIMEOUT API request timeout   ZONOMI_POLLING_INTERVAL Time between DNS propagation check   ZONOMI_PROPAGATION_TIMEOUT Maximum waiting time for DNS propagation   ZONOMI_TTL The TTL of the TXT record used for the DNS challenge    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nMore information  API documentation  "
},
{
	"uri": "https://go-acme.github.io/lego/dns/desec/",
	"title": "deSEC.io",
	"tags": [],
	"description": "",
	"content": "Since: v3.7.0\nConfiguration for deSEC.io.\n Code: desec  Here is an example bash command using the deSEC.io provider:\nDESEC_TOKEN=x-xxxxxxxxxxxxxxxxxxxxxxxxxx \\ lego --email myemail@example.com --dns desec --domains my.example.org run Credentials    Environment Variable Name Description     DESEC_TOKEN Domain token    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nAdditional Configuration    Environment Variable Name Description     DESEC_HTTP_TIMEOUT API request timeout   DESEC_POLLING_INTERVAL Time between DNS propagation check   DESEC_PROPAGATION_TIMEOUT Maximum waiting time for DNS propagation   DESEC_TTL The TTL of the TXT record used for the DNS challenge    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nMore information  API documentation  "
},
{
	"uri": "https://go-acme.github.io/lego/dns/regru/",
	"title": "reg.ru",
	"tags": [],
	"description": "",
	"content": "Since: v3.5.0\nConfiguration for reg.ru.\n Code: regru  Here is an example bash command using the reg.ru provider:\nREGRU_USERNAME=xxxxxx \\ REGRU_PASSWORD=yyyyyy \\ lego --email myemail@example.com --dns regru --domains my.example.org run Credentials    Environment Variable Name Description     REGRU_PASSWORD API password   REGRU_USERNAME API username    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nAdditional Configuration    Environment Variable Name Description     REGRU_HTTP_TIMEOUT API request timeout   REGRU_POLLING_INTERVAL Time between DNS propagation check   REGRU_PROPAGATION_TIMEOUT Maximum waiting time for DNS propagation   REGRU_TTL The TTL of the TXT record used for the DNS challenge    The environment variable names can be suffixed by _FILE to reference a file instead of a value. More information here.\nMore information  API documentation  "
},
{
	"uri": "https://go-acme.github.io/lego/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://go-acme.github.io/lego/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]